{"version":3,"sources":["constants.js","utilities.js","context.js","Components/EquipWindow.js","Components/EquipmentForm.js","Components/ModalWindow.js","Pages/SplashPage.js","Components/Workout.js","Components/WorkoutList.js","Components/ActiveWorkoutTimer.js","Pages/WorkoutsPage.js","Components/TopMenu.js","Components/SavedList.js","firebaseDb.js","Pages/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["EQUIPMENT_LIST","id","title","description","url","MUSCLE_LIST","minutes","i","push","value","text","key","generateMinutes","seconds","generateSeconds","shuffleList","list","map","a","Math","random","sort","b","Exercises","data","exercises","Object","values","WorkoutContext","createContext","Provider","initialWorkouts","filter","val","Equipment","slice","EquipWindow","name","Modal","size","closeIcon","trigger","Button","style","boxShadow","icon","circular","basic","Header","Content","image","Image","wrapped","src","Description","roundOptions","EquipmentForm","workoutContext","useContext","equipment","update","addEquip","generateWorkouts","exercisesAmount","setExercisesAmount","muscleGroups","addMuscleGroup","Segment","padded","color","width","Form","Field","dividing","Subheader","item","str","textAlign","marginBottom","Checkbox","label","checked","includes","onChange","e","Dropdown","fluid","selection","options","defaultValue","onClick","as","Link","to","primary","disabled","ModalWindow","localStorageKey","storageValue","localStorage","getItem","useState","showInfo","setshowInfo","useEffect","setItem","useStateWithLocalStorage","setShowInfo","console","log","defaultOpen","margin","marginTop","event","SplashPage","Grid","centered","Row","Workout","exercise","toggleFavs","favworkouts","replaceWorkout","refresh","user","saved","videoHidden","setVideoHidden","Title","Card","floated","content","Meta","Duration","Accordion","active","Embed","Tutorial","source","maxWidth","maxHeight","WorkoutList","workouts","setCountdown","setRefresh","workoutList","Group","itemsPerRow","parseInt","StartButton","start","pause","resume","getTimerState","getTime","status","time","positive","ResetButton","reset","NextButton","next","popup","setPopup","Confirm","open","confirmButton","cancelButton","onConfirm","onCancel","WorkoutQueue","state","endWorkout","this","props","workout","setCurrentWorkoutID","displayList","currentWorkoutID","timer","setCheckpoints","setTime","callback","length","setState","cancel","columns","Fragment","inverted","fontSize","Minutes","Seconds","Column","verticalAlign","React","Component","ActiveWorkoutTimer","timerProps","TimerHOC","formatValue","x","direction","timeToUpdate","startImmediately","initialTime","WrappedComponent","wrappedComponentProps","timerRenderProps","WorkoutListHeader","selectedEquipment","setWorkingOut","attached","WorkoutsPage","generateDisplayList","workingOut","join","replace","TopMenu","location","useLocation","Menu","pointing","fixed","widths","backgroundColor","Item","pathname","SavedWorkouts","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","SignIn","firebaseAuth","SignInScreen","ProfileScreen","Icon","displayName","signOut","Divider","SavedList","NoFavesMessage","ProfilePage","App","setUser","onAuthStateChanged","withMenu","page","Container","exact","path","render","Boolean","window","hostname","match","app","children","possible","setPossible","setEquipment","setMuscleGroups","setWorkouts","setReplace","setFavworkouts","countdown","setDisplayList","api","substr","clickElement","element","pop","val1","index","indexOf","display","restItem","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6835a6f.chunk.js","sourcesContent":["export const EQUIPMENT_LIST = [\n  {\n    id: \"1\",\n    title: \"Jump Rope\",\n    description: \"a rope!\",\n    url: \"./assets/rope.jpg\"\n  },\n  {\n    id: \"2\",\n    title: \"Power Ball\",\n    description: \"a ball!\",\n    url: \"./assets/ball.jpg\"\n  },\n  {\n    id: \"3\",\n    title: \"Dumbbells\",\n    description: \"a dumbbell!\",\n    url: \"./assets/dumbbell.jpg\"\n  },\n  {\n    id: \"4\",\n    title: \"Barbell / Plates\",\n    description: \"a plate!\",\n    url: \"./assets/barbell.jpg\"\n  },\n  {\n    id: \"5\",\n    title: \"Pull-Up Bar\",\n    description: \"a pull bar!\",\n    url: \"./assets/pull.jpg\"\n  },\n  {\n    id: \"6\",\n    title: \"Kettlebell\",\n    description: \"a kettle!\",\n    url: \"./assets/bell.jpg\"\n  },\n  {\n    id: \"7\",\n    title: \"Jumping Box\",\n    description: \"a box!\",\n    url: \"./assets/box.jpeg\"\n  },\n  {\n    id: \"8\",\n    title: \"Rings\",\n    description: \"a ring!\",\n    url: \"./assets/ring.webp\"\n  },\n  {\n    id: \"9\",\n    title: \"Resistance Band\",\n    description: \"a band!\",\n    url: \"./assets/band.jpeg\"\n  },\n  {\n    id: \"10\",\n    title: \"Sandbag\",\n    description: \"a bag!\",\n    url: \"./assets/bag.png\"\n  },\n  {\n    id: \"11\",\n    title: \"None\",\n    description: \"a body!\",\n    url: \"./assets/body.png\"\n  }\n];\n\nexport const MUSCLE_LIST= [\n  {\n    id: \"1\",\n    title: \"Back\"\n  },\n  {\n    id: \"2\",\n    title: \"Legs\"\n  },\n  {\n    id: \"3\",\n    title: \"Shoulder\"\n  },\n  {\n    id: \"4\",\n    title: \"Arms\"\n  },\n  {\n    id: \"5\",\n    title: \"Full-Body\"\n  },\n  {\n    id: \"6\",\n    title: \"Abs\"\n  },  \n];\n\nconst generateMinutes = () => {\n  let minutes = [];\n  for (let i = 0; i < 11; i++) {\n    minutes.push({ value: i*60000, text: i, key: i })\n  };\n  return minutes;\n}\n\nconst generateSeconds = () => {\n  let seconds = [];\n  for (let i = 0; i < 60; i=i+5) {\n    seconds.push({ value: i*1000, text: i, key: i })\n  };\n  return seconds;\n}\n\nexport const MINUTES = generateMinutes();\nexport const SECONDS = generateSeconds();","export const shuffleList = list =>\n  list\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);","import React, { createContext, useState } from 'react';\nimport * as data from './wkouts.json';\nimport { shuffleList } from './utilities';\n\nconst { Exercises } = data;\n\n// const grabExercises = async () => {\n//   const dataPayload = await firebaseDb.once('value');\n\n//   console.log(dataPayload.val());\n\n//   return dataPayload.exists() ? dataPayload.val() : {};\n// };\n//grabExercises();\n\nconst exercises = Object.values(Exercises);\nconst WorkoutContext = createContext(null);\nconst { Provider } = WorkoutContext;\n\nconst initialWorkouts = shuffleList(exercises.filter(val => {\n  return val.Equipment === \"None\"\n})).slice(0, 8)\n\nconst StateProvider = ({ children }) => {\n  const [possible, setPossible] = useState(false);\n  const [equipment, setEquipment] = useState([\"None\"]);\n  const [muscleGroups, setMuscleGroups] = useState([\"None\"]);\n  const [workouts, setWorkouts] = useState(initialWorkouts);\n  const [replace, setReplace] = useState([]);\n  const [favworkouts, setFavworkouts] = useState([]);\n  const [exercisesAmount, setExercisesAmount] = useState(8);\n  const [countdown, setCountdown] = useState(0);\n  const [currentWorkoutID, setCurrentWorkoutID] = useState(0);\n  const [displayList, setDisplayList] = useState([]);\n\n  \n  const update = () => {\n    \n    if (equipment.length > 0 && muscleGroups.length > 1) {\n      setPossible(true);\n    }\n    else {\n      setPossible(false);\n    }\n    return possible;\n  }\n\n  const addEquip = value => {\n    equipment.includes(value) ? setEquipment(equipment.filter(x => x !== value)) : setEquipment([...equipment, value]);\n  }\n\n  const addMuscleGroup = value => {\n    muscleGroups.includes(value)? setMuscleGroups(muscleGroups.filter(x => x !== value)):setMuscleGroups([...muscleGroups, value]);\n  }\n\n  const toggleFavs = value => {\n    favworkouts.map(val => val.Title).includes(value.Title) ?\n      setFavworkouts(favworkouts.filter(x => x.Title !== value.Title)) :\n      setFavworkouts([...favworkouts, value])\n  }\n\n  const generateWorkouts = () => {\n    const values = exercises.filter(val => {\n      // console.log(\"generateWorkouts called\")\n      // console.log(val)\n      return equipment.includes(val.Equipment) && muscleGroups.includes(val[\"Primary Muscle Group\"]);\n    })\n\n    // values = values.filter(val => {\n    //   return muscleGroups.includes(val[\"Primary Muscle Group\"])\n    // })\n\n    setCurrentWorkoutID(0);\n    let substr = shuffleList(values);\n    console.log(substr);\n    setWorkouts(substr.slice(0, exercisesAmount));\n    console.log(substr.slice(0, exercisesAmount))\n    setReplace(substr.slice(exercisesAmount, substr.length));\n    console.log(substr.slice(exercisesAmount, substr.length))\n  }\n\n  const generateDisplayList = () => {\n    let display = []\n    const restItem = exercises.filter(val => val.Title === \"Rest\")[0]\n    console.log(restItem);\n    \n    for (const workout of workouts) {\n      display.push(workout)\n      display.push(restItem)\n    }\n    setDisplayList(display)\n  }\n\n  const replaceWorkout = clickElement => {\n    if (replace.length > 0){\n      let val = replace;\n    let element = val.pop();\n    let val1 = workouts;\n    let index = val1.indexOf(clickElement);\n    val1[index] = element;\n    setReplace(val);\n    setWorkouts(val1);\n    }\n  }\n\n  const api = {\n    equipment,\n    update,\n    \n    addEquip,\n    muscleGroups,\n    addMuscleGroup,\n    workouts,\n    generateWorkouts,\n    exercisesAmount,\n    setExercisesAmount,\n    countdown,\n    setCountdown,\n    favworkouts,\n    toggleFavs,\n    replaceWorkout,\n    currentWorkoutID,\n    setCurrentWorkoutID,\n    displayList,\n    generateDisplayList\n  };\n\n  return <Provider value={api}>{children}</Provider>;\n}\n\nexport { WorkoutContext, StateProvider };","import React from \"react\";\nimport { Button, Header, Image, Modal } from \"semantic-ui-react\";\n\nconst EquipWindow = ({ name, description, url }) => (\n  <Modal\n    size=\"tiny\"\n    closeIcon\n    trigger={\n      <Button\n        style={{ boxShadow: \"none\" }}\n        icon=\"question circle\"\n        size=\"tiny\"\n        circular\n        basic\n      />\n    }\n  >\n    <Modal.Header>{name}</Modal.Header>\n    <Modal.Content image>\n      <Image wrapped size=\"medium\" src={url} />\n      <Modal.Description>\n        <Header>About</Header>\n        <p>{description}</p>\n      </Modal.Description>\n    </Modal.Content>\n  </Modal>\n);\n\nexport default EquipWindow;\n","import React, { useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Form, Checkbox, Header, Button, Dropdown } from 'semantic-ui-react';\nimport { EQUIPMENT_LIST, MUSCLE_LIST } from '../constants';\nimport { WorkoutContext } from '../context.js';\nimport EquipWindow from './EquipWindow';\n\nconst roundOptions = [\n  {\n    key: 1,\n    text: '1 exercise',\n    value: 1\n  },\n  {\n    key: 2,\n    text: '2 exercises',\n    value: 2\n  },\n  {\n    key: 4,\n    text: '4 exercises',\n    value: 4\n  },\n  {\n    key: 6,\n    text: '6 exercises',\n    value: 6\n  },\n  {\n    key: 8,\n    text: '8 exercises',\n    value: 8\n  },\n  {\n    key: 16,\n    text: '16 exercises',\n    value: 16\n  }\n];\n\nconst EquipmentForm = () => {\n  const workoutContext = useContext(WorkoutContext);\n  const {\n    equipment,\n    update,\n    addEquip,\n    generateWorkouts,\n    exercisesAmount,\n    setExercisesAmount,\n    muscleGroups,\n    addMuscleGroup\n  } = workoutContext;\n  let a = update();\n  return (\n    <Segment padded color=\"blue\" style={{ width: \"80%\" }}>\n      <Form size=\"large\">\n        <Form.Field>\n          <Header color=\"blue\" dividing>\n            What Equipment Do You Have?\n            <Header.Subheader>\n              Selecting more than one option will give you different workouts for different equipments.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        {EQUIPMENT_LIST.map(item => {\n          const name = (str) => {\n            if (str === \"None\") {\n              return \"Bodyweight\";\n            }\n            else { return str; }\n          }\n          return (\n            <Form.Field key={item.id} style={{ textAlign: \"left\", marginBottom: \"calc(1em - 13.84px)\" }}>\n              <Checkbox\n                label={name(item.title)}\n                value={item.title}\n                checked={equipment.includes(item.title)}\n                onChange={(e, { value }) => addEquip(value)} />\n              <EquipWindow name={name(item.title)} description={item.description} url={item.url} />\n            </Form.Field>\n          )\n        })}\n        <Form.Field>\n          <Header dividing color=\"blue\">\n            How Many Rounds?\n            <Header.Subheader>\n              Specify how many different exercises you would like to perform.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            fluid\n            selection\n            options={roundOptions}\n            defaultValue={exercisesAmount}\n            onChange={(e, { value }) => setExercisesAmount(value)} />\n        </Form.Field>\n        <Form.Field>\n          <Header dividing color=\"blue\">\n            What Muscle Groups?\n            <Header.Subheader>\n              Specify what types of exercise you would like to perform.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        <Form.Field>\n          {MUSCLE_LIST.map(item => {\n            return (\n              <Form.Field key={item.id} style={{ textAlign: \"left\" }}>\n                <Checkbox\n                  label={item.title}\n                  value={item.title}\n                  checked={muscleGroups.includes(item.title)}\n                  onChange={(e, { value }) => addMuscleGroup(value)} />\n              </Form.Field>\n            )\n          })}\n        </Form.Field>\n        <Button\n          onClick={generateWorkouts}\n          size=\"large\"\n          as={Link}\n          to='/workouts'\n          primary\n          disabled={!a}>\n          GENERATE WORKOUT\n        </Button>\n      </Form>\n    </Segment>\n  );\n}\n\nexport default EquipmentForm","import React, { useState, useEffect } from \"react\";\nimport { Checkbox, Image, Modal } from \"semantic-ui-react\";\n\nconst useStateWithLocalStorage = localStorageKey => {\n  const storageValue = localStorage.getItem(localStorageKey);\n  const [showInfo, setshowInfo] = useState(\n    storageValue !== null ? storageValue === \"true\" : true\n  );\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, showInfo);\n  }, [showInfo, localStorageKey]);\n  return [showInfo, setshowInfo];\n};\n\nconst ModalWindow = () => {\n  const [showInfo, setShowInfo] = useStateWithLocalStorage(\"showInfo\");\n  const onChange = (event, data) => setShowInfo(!data.checked);\n  console.log(showInfo, \"showing info modal window\");\n  console.log(\"cookies:\", localStorage);\n\n  return (\n    <Modal size=\"medium\" defaultOpen={showInfo} closeIcon>\n      <Modal.Header>What is NU HIIT?</Modal.Header>\n      <Modal.Content image>\n        <Image\n          wrapped\n          size=\"large\"\n          src=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/701/one-change-improve-hiit-workout-preformance-1513345031.jpg?resize=480:*\"\n        />\n        <Modal.Description>\n          <p>\n            High-Intensity Interval Training (HIIT) is a cardiovascular exercise strategy alternating\n            short periods of intense anaerobic exercise with less intense recovery periods.\n            It is an effective way to lose weight and stay healthy.\n          </p>\n          <p>\n            NU HIIT helps generate the ideal HIIT workout based on your equipment and individual needs!\n          </p>\n        </Modal.Description>\n      </Modal.Content>\n      <Checkbox\n        style={{ margin: \"20px\", marginTop: \"0px\" }}\n        label=\"Do not show this message again.\"\n        onChange={onChange}\n      />\n    </Modal>\n  );\n};\nexport default ModalWindow;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport EquipmentForm from '../Components/EquipmentForm';\nimport ModalWindow from '../Components/ModalWindow';\n\nconst SplashPage = () => {\n  return (\n    <Grid centered style={{ marginTop: \"20px\" }}>\n      <Grid.Row>\n        <ModalWindow />\n        <EquipmentForm />\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default SplashPage","import React, { useState } from 'react';\nimport { Card, Embed, Button, Accordion } from 'semantic-ui-react';\n\n\nconst Workout = ({ exercise, toggleFavs, favworkouts , replaceWorkout, refresh, user, saved}) =>{\n  const [videoHidden, setVideoHidden] = useState(false)\n  \n  console.log(exercise.Title);\n  return (\n    <Card color=\"blue\">\n      <Card.Content>\n        {user ? \n          <Button\n            floated=\"right\"\n            icon={favworkouts.includes(exercise) ? \"heart\" : \"heart outline\"}\n            basic={favworkouts.includes(exercise) ? false : true}\n            color=\"blue\"\n            onClick={() => toggleFavs(exercise)}\n          />\n        : null}\n        {!saved ? \n          <Button\n            floated=\"right\"\n            color=\"blue\"\n            basic\n            icon=\"exchange\"\n            content=\"Swap\"\n            onClick={() => {\n              replaceWorkout(exercise);\n              refresh();\n            }}\n          />\n          : null\n        }\n        <Card.Header>{exercise.Title}</Card.Header>\n        <Card.Meta>Duration: {exercise.Duration} seconds</Card.Meta>\n        <Card.Meta>Equipment: {exercise.Equipment}</Card.Meta>\n        <Card.Description>\n          <Accordion>\n            <Accordion.Title active={videoHidden}>\n              <Button\n                icon={videoHidden ? \"close\" : \"video\"}\n                basic={videoHidden ? true : false}\n                color=\"blue\"\n                content={videoHidden ? \"Close Tutorial\" : \"Watch Tutorial\"}\n                onClick={() => setVideoHidden(!videoHidden)}\n              />\n            </Accordion.Title>\n            <Accordion.Content active={videoHidden}>\n              <Embed\n                active\n                id={exercise.Tutorial}\n                source=\"youtube\"\n                style={{ maxWidth: \"400px\", maxHeight: \"300px\" }}\n              />\n            </Accordion.Content>\n          </Accordion>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );};\n\nexport default Workout","import React, { useContext, useState } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Workout from './Workout';\nimport { WorkoutContext } from '../context';\n\n\nconst WorkoutList = ({ user }) => {\n  const workoutContext = useContext(WorkoutContext)\n  const { workouts, setCountdown, toggleFavs, favworkouts, replaceWorkout } = workoutContext;\n  const [refresh, setRefresh] = useState(false)\n  const workoutList = workouts\n\n  return (\n    <Card.Group style={{ textAlign: \"left\", width: \"80%\", marginTop: \"10px\"}} itemsPerRow={1}> \n      {workoutList.map(exercise => {\n        return (\n          <Workout \n            user={user}\n            exercise={exercise} \n            key={exercise.Title}\n            replaceWorkout={replaceWorkout}\n            refresh={() => setRefresh(!refresh)}\n            setCountdown={() => setCountdown(parseInt(exercise.Duration) * 1000)}\n            toggleFavs={toggleFavs}\n            favworkouts={favworkouts}\n          />\n        )}\n      )}\n    </Card.Group>\n  )\n};\n\nexport default WorkoutList","import React, { useContext, useState } from \"react\";\nimport { Header, Button, Grid, Confirm } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport { WorkoutContext } from \"../context\";\nimport Timer from \"react-compound-timer\";\n\nconst ActiveWorkoutTimer = ({ cancel }) => {\n  const workoutContext = useContext(WorkoutContext);\n  const {displayList: workouts, currentWorkoutID } = workoutContext;\n\n  const withTimer = timerProps => WrappedComponent => wrappedComponentProps => (\n    <Timer {...timerProps}>\n      {timerRenderProps => \n        <WrappedComponent \n          {...wrappedComponentProps} \n          timer={timerRenderProps} \n          workout={workoutContext}\n          cancel={cancel} \n        />\n      }\n    </Timer>\n  )\n\n  const TimerHOC = withTimer({\n    formatValue: x => `${x < 10 ? `0${x}` : x}`,\n    direction: \"backward\",\n    timeToUpdate: 100,\n    startImmediately: true,\n    initialTime: workouts[currentWorkoutID].Duration * 1000\n  })(WorkoutQueue);\n\n  return (\n    <TimerHOC />\n  );\n};\n\nconst StartButton = ({ start, pause, resume, getTimerState, getTime }) => {\n  const status = getTimerState();\n  const time = getTime();\n  console.log(status);\n  return (\n    <Button\n      icon={\n        (status === \"STOPPED\") | (status === \"INITED\")\n          ? \"play\"\n          : status === \"PAUSED\"\n          ? \"play\"\n          : \"pause\"\n      }\n      size=\"massive\"\n      circular\n      disabled={time === 0}\n      positive\n      onClick={\n        (status === \"STOPPED\") | (status === \"INITED\")\n          ? start\n          : status === \"PAUSED\"\n          ? resume\n          : pause\n      }\n    >\n    </Button>\n  );\n};\n\nconst ResetButton = ({ getTimerState, reset, getTime }) => {\n  const status = getTimerState();\n  const time = getTime();\n  return (\n    <Button\n      icon=\"redo\"\n      circular\n      size=\"big\"\n      disabled={(status === \"STOPPED\") | (time === 0)}\n      onClick={reset}\n    />\n  );\n};\n\nconst NextButton = ({ next }) => {\n  const [popup, setPopup] = useState(false);\n  return( \n  <div>\n  <Button icon=\"forward\" circular size=\"big\" onClick={() => setPopup(true)} />\n  <Confirm \n  open={popup} \n  content={\"Are you sure you want to skip this exercise?\"}\n  confirmButton={\"Yes\"}\n  cancelButton={\"No\"}\n  onConfirm={next}\n  onCancel = {()=> setPopup(false)}\n  />\n  </div>\n  )};\n\nclass WorkoutQueue extends React.Component {\n  state={\n    endWorkout: false\n  };\n\n  componentDidMount(){\n    const { setCurrentWorkoutID, displayList: workouts, currentWorkoutID } = this.props.workout;\n    const { setCheckpoints, setTime  } = this.props.timer;\n\n    const next = () => {\n      if (currentWorkoutID < workouts.length - 1) {\n        setTime(workouts[currentWorkoutID + 1].Duration);\n        setCurrentWorkoutID(currentWorkoutID + 1);\n      }\n      else {\n        this.setState({ endWorkout: true })\n      }\n    };\n\n    setCheckpoints([\n      {\n        time: 0,\n        callback: () => next()\n      }\n    ]);\n  };\n\n  render() {\n    const { cancel } = this.props;\n    const { endWorkout } = this.state;\n    const { displayList: workouts, currentWorkoutID, setCurrentWorkoutID } = this.props.workout;\n    const { getTime, getTimerState, start, resume, pause, reset, setTime  } = this.props.timer;\n    \n    const next = () => {\n      if (currentWorkoutID < workouts.length - 1) {\n        setTime(workouts[currentWorkoutID + 1].Duration);\n        setCurrentWorkoutID(currentWorkoutID + 1);\n      }\n      else {\n        this.setState({ endWorkout: true })\n      }\n      this.setState({popup: true})\n    };\n\n    return (\n      <Grid style={{marginTop: \"50px\" }} centered columns={3}>\n        {!endWorkout ? \n        <React.Fragment>\n          <Grid.Row>\n            <Header inverted size=\"large\" >\n              {workouts[currentWorkoutID].Title}\n            </Header>\n          </Grid.Row>\n          <Grid.Row>\n            <Header inverted style={{ fontSize: \"80px\" }}>\n              <Timer.Minutes />:<Timer.Seconds />\n            </Header>\n          </Grid.Row>\n          <Grid.Row>\n          <Header color=\"grey\">\n          {`NEXT UP: ${workouts[currentWorkoutID+1] ? workouts[currentWorkoutID+1].Title : 'DONE'}`}\n          </Header>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column verticalAlign=\"middle\" textAlign=\"right\">\n              <ResetButton\n                reset={reset}\n                getTimerState={getTimerState}\n                getTime={getTime}\n              />\n            </Grid.Column>\n            <Grid.Column verticalAlign=\"middle\">\n              <StartButton\n                getTimerState={getTimerState}\n                getTime={getTime}\n                start={start}\n                pause={pause}\n                resume={resume}\n              />\n            </Grid.Column>\n            <Grid.Column verticalAlign=\"middle\" textAlign=\"left\">\n              <NextButton next={next}/>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Button content=\"Back to Workout Preview\" onClick={cancel} />\n          </Grid.Row>\n        </React.Fragment>\n        :\n        <React.Fragment>\n          <Grid.Row>\n            <Header size=\"large\" inverted content=\"END OF WORKOUT\" />\n          </Grid.Row>\n          <Grid.Row>\n            <Button content=\"Back To Workout Generator\" as={Link} to=\"/\" />\n          </Grid.Row>\n        </React.Fragment>}\n      </Grid>\n    );\n  }\n}\n\nexport default ActiveWorkoutTimer;","import React, { useContext, useState } from 'react';\nimport { Grid, Header, Button, Segment } from 'semantic-ui-react';\nimport WorkoutList from '../Components/WorkoutList';\nimport ActiveWorkoutTimer from '../Components/ActiveWorkoutTimer';\nimport { Link } from 'react-router-dom';\nimport { WorkoutContext } from '../context';\n\nconst WorkoutsPage = ({user}) => {\n  const workoutContext = useContext(WorkoutContext);\n  const { equipment, exercisesAmount, generateDisplayList } = workoutContext;\n\n  const [ workingOut, setWorkingOut ] = useState(false);\n \n  const selectedEquipment =\n    (equipment.length === 1 & equipment[0] === \"None\") ? \n    \"Bodyweight\" : \n    equipment.join(\", \").replace(\"None,\", \"Bodyweight,\")\n\n \n  return (\n    !workingOut ? \n    <Grid key={'content'} centered style={{ marginTop: \"15px\" }} >\n      <Grid.Row>\n        <WorkoutListHeader \n          selectedEquipment={selectedEquipment} \n          exercisesAmount={exercisesAmount} \n          setWorkingOut={() => {\n            generateDisplayList();\n            setWorkingOut(true)}}\n        />\n      </Grid.Row>\n      <Grid.Row>\n        <WorkoutList user={user} />\n      </Grid.Row>\n    </Grid>\n    :\n    <ActiveWorkoutTimer cancel={() => setWorkingOut(!workingOut)} />\n  );\n}\n\nconst WorkoutListHeader = ({ selectedEquipment, exercisesAmount, setWorkingOut }) => {\n  return (\n    <Segment color=\"blue\" style={{ width: \"80%\", textAlign: \"left\", marginTop: \"20px\"}}>\n      <Header dividing as=\"h3\">\n        <Header textAlign=\"center\" dividing color=\"blue\">\n          Preview Workout\n          <Header.Subheader content=\"Watch tutorials, save workouts for later, and/or swap out workouts you don't like.\" />\n        </Header>\n        <Header.Subheader content=\"Selected Round Count:\" />\n        {`${exercisesAmount} Total Exercises`}\n        <Header.Subheader content=\"Selected Workout Equipment:\" />\n        {selectedEquipment}\n      </Header>\n      <Grid>\n        <Grid.Column textAlign=\"center\">\n          <Button.Group size=\"small\">\n            <Button\n              attached=\"left\"\n              as={Link}\n              primary\n              to=\"/\"\n              icon=\"arrow left\"\n              content=\"Back to Selection\"\n            />\n            <Button\n              attached=\"right\"\n              color=\"green\"\n              icon=\"play\"\n              content=\"Begin Workout\"\n              onClick={setWorkingOut}\n            />\n          </Button.Group>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\n\nexport default WorkoutsPage","import React from 'react';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useLocation, Link } from 'react-router-dom';\n\n\nconst TopMenu = ({user}) => {\n  const location = useLocation();\n  return (\n    <Menu\n      pointing\n      color=\"blue\"\n      fixed=\"top\"\n      widths={2}\n      style={{ backgroundColor: \"white\" }}\n    >\n      <Menu.Item\n        active={location.pathname === \"/\" | location.pathname === \"/workouts\"}\n        as={Link}\n        to=\"/workouts\"\n      >\n        <Header\n          as=\"h4\"\n          icon='stopwatch'\n          color=\"blue\"\n          content=\"Workout\"\n        />\n      </Menu.Item>\n      <Menu.Item active={location.pathname === \"/profile\"} as={Link} to=\"/profile\">\n        <Header\n          as=\"h4\"\n          color=\"blue\"\n          content={user ? \"My Profile\" : \"Sign In\"}\n          icon='user'\n        />\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default TopMenu","import React, { useContext } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Workout from '../Components/Workout';\nimport { WorkoutContext } from '../context';\n\n\nconst SavedWorkouts = ({ user }) => {\n  const workoutContext = useContext(WorkoutContext)\n  const {favworkouts, toggleFavs, setCountdown, replaceWorkout} = workoutContext;\n\n  return (\n    <Card.Group style={{ textAlign: \"left\", width: \"80%\"}} itemsPerRow={1}> \n      {favworkouts.map(exercise => {\n        return (\n          <Workout \n            user={user}\n            saved={true}\n            exercise={exercise} \n            key={exercise.Title}   \n            replaceWorkout={replaceWorkout} \n            setCountdown={() => setCountdown(parseInt(exercise.Duration) * 1000)}   \n            toggleFavs={toggleFavs}\n            favworkouts={favworkouts}\n          />\n        )}\n      )}\n    </Card.Group>\n  )\n}\n\nexport default SavedWorkouts","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDfmgY9F8ms-PTeDATk0GKOQtA63VueGwc\",\n  authDomain: \"nu-hiit.firebaseapp.com\",\n  databaseURL: \"https://nu-hiit.firebaseio.com\",\n  projectId: \"nu-hiit\",\n  storageBucket: \"nu-hiit.appspot.com\",\n  messagingSenderId: \"719477044477\",\n  appId: \"1:719477044477:web:f2347fc0247c9e3190ba94\",\n  measurementId: \"G-ZLZB3V2C2V\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst firebaseDb = firebase.database().ref()\n\nexport { firebaseDb , firebase};\n","import React, { useContext } from 'react';\nimport { Grid, Card, Header, Icon, Button, Segment, Divider } from 'semantic-ui-react';\nimport SavedList from '../Components/SavedList';\nimport { WorkoutContext } from '../context';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { firebase } from '../firebaseDb';\nimport 'firebase/database';\nimport \"firebase/auth\";\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nconst SignIn = () => (\n  <StyledFirebaseAuth\n    uiConfig={uiConfig}\n    firebaseAuth={firebase.auth()}\n  />\n);\n\nconst SignInScreen = () => (\n  <Grid centered style={{ marginTop: \"30px\" }}>\n    <Segment color=\"blue\" style={{ width: \"80%\" }}>\n      <Grid.Row>\n        <Header content=\"Log in to access saved workouts and more!\" />\n      </Grid.Row>\n      <Grid.Row>\n        <SignIn />\n      </Grid.Row>\n    </Segment>\n  </Grid>\n)\n\nconst ProfileScreen = ({user}) => {\n  const workoutContext = useContext(WorkoutContext)\n  const { favworkouts } = workoutContext;\n  return (\n    <Grid centered style={{ marginTop: \"30px\" }}>\n      <Grid.Row>\n        <Header inverted>\n          <Icon name='user' />\n          {user.displayName}\n        </Header>\n      </Grid.Row>\n      <Grid.Row>\n        <Button \n          primary \n          content=\"Logout\" \n          onClick={() => firebase.auth().signOut()} \n        />\n      </Grid.Row>\n      <Divider inverted />\n      <Grid.Row>\n        <Header inverted dividing content=\"FAVORITE WORKOUTS\" />\n        { favworkouts.length === 0 ? <NoFavesMessage />\n        : <SavedList user={user} /> }\n      </Grid.Row>\n    </Grid>\n  )\n}\n\n\nconst ProfilePage = ({ user }) => {\n  return (\n    user ? <ProfileScreen user={user} /> : <SignInScreen />\n  );\n};\n\nconst NoFavesMessage = () =>\n  <Card style={{ textAlign: \"left\", width: \"80%\", marginTop:\"0\" }}>\n    <Card.Content>\n      <Card.Header content=\"Your favorites list is empty!\" />\n      <Card.Description>\n        Save workouts to this list by tapping on the heart icon next to the workout name!\n      </Card.Description>\n    </Card.Content>\n  </Card>\n\nexport default ProfilePage","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport SplashPage from './Pages/SplashPage';\nimport WorkoutsPage from './Pages/WorkoutsPage';\nimport TopMenu from './Components/TopMenu';\nimport ProfilePage from './Pages/ProfilePage';\nimport { firebase }from './firebaseDb';\nimport 'firebase/database';\nimport \"firebase/auth\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(setUser);\n  }, []);\n  \n\n\n\n  const withMenu = (page) => {\n    return (\n      <Container>\n        <TopMenu user={user} />\n        {page}\n      </Container>\n    )\n  };\n\n  return (\n    <BrowserRouter>\n      <Route \n        exact \n        path='/' \n        render={() => withMenu(<SplashPage />)}\n      />\n      <Route\n        path='/workouts'\n        render={() => withMenu(<WorkoutsPage user={user} />)}\n      />\n      <Route\n        path='/profile'\n        render={() => withMenu(<ProfilePage user={user} />)}\n      />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './context.js';\n\nconst app = (\n  <StateProvider>\n    <App />\n  </StateProvider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}