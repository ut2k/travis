{"ast":null,"code":"import _slicedToArray from \"/Users/utkarshmishra/TeamOrange/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/utkarshmishra/TeamOrange/src/Pages/WorkoutsPage.js\";\nimport React, { useContext, useState } from 'react';\nimport { Grid, Header, Button, Segment } from 'semantic-ui-react';\nimport WorkoutList from '../Components/WorkoutList';\nimport ActiveWorkoutTimer from '../Components/ActiveWorkoutTimer';\nimport { Link } from 'react-router-dom';\nimport { WorkoutContext } from '../context';\n\nconst WorkoutsPage = ({\n  user\n}) => {\n  const workoutContext = useContext(WorkoutContext);\n  const equipment = workoutContext.equipment,\n        exercisesAmount = workoutContext.exercisesAmount,\n        generateDisplayList = workoutContext.generateDisplayList;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        workingOut = _useState2[0],\n        setWorkingOut = _useState2[1];\n\n  const selectedEquipment = equipment.length === 1 & equipment[0] === \"None\" ? \"Bodyweight\" : equipment.join(\", \").replace(\"None,\", \"Bodyweight,\");\n  return !workingOut ? React.createElement(Grid, {\n    key: 'content',\n    centered: true,\n    style: {\n      marginTop: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(WorkoutListHeader, {\n    selectedEquipment: selectedEquipment,\n    exercisesAmount: exercisesAmount,\n    setWorkingOut: () => {\n      generateDisplayList();\n      setWorkingOut(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(WorkoutList, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))) : React.createElement(ActiveWorkoutTimer, {\n    cancel: () => setWorkingOut(!workingOut),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n};\n\nconst WorkoutListHeader = ({\n  selectedEquipment,\n  exercisesAmount,\n  setWorkingOut\n}) => {\n  return React.createElement(Segment, {\n    color: \"blue\",\n    style: {\n      width: \"80%\",\n      textAlign: \"left\",\n      marginTop: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Header, {\n    dividing: true,\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Header, {\n    textAlign: \"center\",\n    dividing: true,\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Preview Workout\", React.createElement(Header.Subheader, {\n    content: \"Watch tutorials, save workouts for later, and/or swap out workouts you don't like.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Header.Subheader, {\n    content: \"Selected Round Count:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), `${exercisesAmount} Total Exercises`, React.createElement(Header.Subheader, {\n    content: \"Selected Workout Equipment:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), selectedEquipment), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button.Group, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    attached: \"left\",\n    as: Link,\n    primary: true,\n    to: \"/\",\n    icon: \"arrow left\",\n    content: \"Back to Selection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Button, {\n    attached: \"right\",\n    color: \"green\",\n    icon: \"play\",\n    content: \"Begin Workout\",\n    onClick: setWorkingOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))));\n};\n\nexport default WorkoutsPage;","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/src/Pages/WorkoutsPage.js"],"names":["React","useContext","useState","Grid","Header","Button","Segment","WorkoutList","ActiveWorkoutTimer","Link","WorkoutContext","WorkoutsPage","user","workoutContext","equipment","exercisesAmount","generateDisplayList","workingOut","setWorkingOut","selectedEquipment","length","join","replace","marginTop","WorkoutListHeader","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Grid, Header, Button, Segment } from 'semantic-ui-react';\nimport WorkoutList from '../Components/WorkoutList';\nimport ActiveWorkoutTimer from '../Components/ActiveWorkoutTimer';\nimport { Link } from 'react-router-dom';\nimport { WorkoutContext } from '../context';\n\nconst WorkoutsPage = ({user}) => {\n  const workoutContext = useContext(WorkoutContext);\n  const { equipment, exercisesAmount, generateDisplayList } = workoutContext;\n\n  const [ workingOut, setWorkingOut ] = useState(false);\n \n  const selectedEquipment =\n    (equipment.length === 1 & equipment[0] === \"None\") ? \n    \"Bodyweight\" : \n    equipment.join(\", \").replace(\"None,\", \"Bodyweight,\")\n\n \n  return (\n    !workingOut ? \n    <Grid key={'content'} centered style={{ marginTop: \"15px\" }} >\n      <Grid.Row>\n        <WorkoutListHeader \n          selectedEquipment={selectedEquipment} \n          exercisesAmount={exercisesAmount} \n          setWorkingOut={() => {\n            generateDisplayList();\n            setWorkingOut(true)}}\n        />\n      </Grid.Row>\n      <Grid.Row>\n        <WorkoutList user={user} />\n      </Grid.Row>\n    </Grid>\n    :\n    <ActiveWorkoutTimer cancel={() => setWorkingOut(!workingOut)} />\n  );\n}\n\nconst WorkoutListHeader = ({ selectedEquipment, exercisesAmount, setWorkingOut }) => {\n  return (\n    <Segment color=\"blue\" style={{ width: \"80%\", textAlign: \"left\", marginTop: \"20px\"}}>\n      <Header dividing as=\"h3\">\n        <Header textAlign=\"center\" dividing color=\"blue\">\n          Preview Workout\n          <Header.Subheader content=\"Watch tutorials, save workouts for later, and/or swap out workouts you don't like.\" />\n        </Header>\n        <Header.Subheader content=\"Selected Round Count:\" />\n        {`${exercisesAmount} Total Exercises`}\n        <Header.Subheader content=\"Selected Workout Equipment:\" />\n        {selectedEquipment}\n      </Header>\n      <Grid>\n        <Grid.Column textAlign=\"center\">\n          <Button.Group size=\"small\">\n            <Button\n              attached=\"left\"\n              as={Link}\n              primary\n              to=\"/\"\n              icon=\"arrow left\"\n              content=\"Back to Selection\"\n            />\n            <Button\n              attached=\"right\"\n              color=\"green\"\n              icon=\"play\"\n              content=\"Begin Workout\"\n              onClick={setWorkingOut}\n            />\n          </Button.Group>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\n\nexport default WorkoutsPage"]},"metadata":{},"sourceType":"module"}