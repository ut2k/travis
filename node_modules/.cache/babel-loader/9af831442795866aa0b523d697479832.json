{"ast":null,"code":"var _jsxFileName = \"/Users/utkarshmishra/TeamOrange/src/Components/EquipmentForm.js\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Form, Checkbox, Header, Button, Dropdown } from 'semantic-ui-react';\nimport { EQUIPMENT_LIST, MUSCLE_LIST } from '../constants';\nimport { WorkoutContext } from '../context.js';\nimport EquipWindow from './EquipWindow';\nconst roundOptions = [{\n  key: 1,\n  text: '1 exercise',\n  value: 1\n}, {\n  key: 2,\n  text: '2 exercises',\n  value: 2\n}, {\n  key: 4,\n  text: '4 exercises',\n  value: 4\n}, {\n  key: 6,\n  text: '6 exercises',\n  value: 6\n}, {\n  key: 8,\n  text: '8 exercises',\n  value: 8\n}, {\n  key: 16,\n  text: '16 exercises',\n  value: 16\n}];\n\nconst EquipmentForm = () => {\n  const workoutContext = useContext(WorkoutContext);\n  const equipment = workoutContext.equipment,\n        update = workoutContext.update,\n        addEquip = workoutContext.addEquip,\n        generateWorkouts = workoutContext.generateWorkouts,\n        exercisesAmount = workoutContext.exercisesAmount,\n        setExercisesAmount = workoutContext.setExercisesAmount,\n        muscleGroups = workoutContext.muscleGroups,\n        addMuscleGroup = workoutContext.addMuscleGroup;\n  let a = update();\n  return React.createElement(Segment, {\n    padded: true,\n    color: \"blue\",\n    style: {\n      width: \"80%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Form, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Header, {\n    color: \"blue\",\n    dividing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"What Equipment Do You Have?\", React.createElement(Header.Subheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Selecting more than one option will give you different workouts for different equipments.\"))), EQUIPMENT_LIST.map(item => {\n    const name = str => {\n      if (str === \"None\") {\n        return \"Bodyweight\";\n      } else {\n        return str;\n      }\n    };\n\n    return React.createElement(Form.Field, {\n      key: item.id,\n      style: {\n        textAlign: \"left\",\n        marginBottom: \"calc(1em - 13.84px)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: name(item.title),\n      value: item.title,\n      checked: equipment.includes(item.title),\n      onChange: (e, {\n        value\n      }) => addEquip(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(EquipWindow, {\n      name: name(item.title),\n      description: item.description,\n      url: item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Header, {\n    dividing: true,\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"How Many Rounds?\", React.createElement(Header.Subheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Specify how many different exercises you would like to perform.\"))), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    fluid: true,\n    selection: true,\n    options: roundOptions,\n    defaultValue: exercisesAmount,\n    onChange: (e, {\n      value\n    }) => setExercisesAmount(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Header, {\n    dividing: true,\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"What Muscle Groups?\", React.createElement(Header.Subheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Specify what types of exercise you would like to perform.\"))), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, MUSCLE_LIST.map(item => {\n    return React.createElement(Form.Field, {\n      key: item.id,\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      label: item.title,\n      value: item.title,\n      checked: muscleGroups.includes(item.title),\n      onChange: (e, {\n        value\n      }) => addMuscleGroup(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  })), React.createElement(Button, {\n    onClick: generateWorkouts,\n    size: \"large\",\n    as: Link,\n    to: \"/workouts\",\n    primary: true,\n    disabled: !a,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"GENERATE WORKOUT\")));\n};\n\nexport default EquipmentForm;","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/src/Components/EquipmentForm.js"],"names":["React","useContext","Link","Segment","Form","Checkbox","Header","Button","Dropdown","EQUIPMENT_LIST","MUSCLE_LIST","WorkoutContext","EquipWindow","roundOptions","key","text","value","EquipmentForm","workoutContext","equipment","update","addEquip","generateWorkouts","exercisesAmount","setExercisesAmount","muscleGroups","addMuscleGroup","a","width","map","item","name","str","id","textAlign","marginBottom","title","includes","e","description","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,MAA1C,EAAkDC,QAAlD,QAAkE,mBAAlE;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,cAA5C;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADmB,EAMnB;AACEF,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CANmB,EAWnB;AACEF,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAXmB,EAgBnB;AACEF,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAhBmB,EAqBnB;AACEF,EAAAA,GAAG,EAAE,CADP;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CArBmB,EA0BnB;AACEF,EAAAA,GAAG,EAAE,EADP;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CA1BmB,CAArB;;AAiCA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,cAAc,GAAGjB,UAAU,CAACU,cAAD,CAAjC;AAD0B,QAGxBQ,SAHwB,GAWtBD,cAXsB,CAGxBC,SAHwB;AAAA,QAIxBC,MAJwB,GAWtBF,cAXsB,CAIxBE,MAJwB;AAAA,QAKxBC,QALwB,GAWtBH,cAXsB,CAKxBG,QALwB;AAAA,QAMxBC,gBANwB,GAWtBJ,cAXsB,CAMxBI,gBANwB;AAAA,QAOxBC,eAPwB,GAWtBL,cAXsB,CAOxBK,eAPwB;AAAA,QAQxBC,kBARwB,GAWtBN,cAXsB,CAQxBM,kBARwB;AAAA,QASxBC,YATwB,GAWtBP,cAXsB,CASxBO,YATwB;AAAA,QAUxBC,cAVwB,GAWtBR,cAXsB,CAUxBQ,cAVwB;AAY1B,MAAIC,CAAC,GAAGP,MAAM,EAAd;AACA,SACE,oBAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAgB,IAAA,KAAK,EAAC,MAAtB;AAA6B,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEE,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGAFF,CADF,CADF,EASGnB,cAAc,CAACoB,GAAf,CAAmBC,IAAI,IAAI;AAC1B,UAAMC,IAAI,GAAIC,GAAD,IAAS;AACpB,UAAIA,GAAG,KAAK,MAAZ,EAAoB;AAClB,eAAO,YAAP;AACD,OAFD,MAGK;AAAE,eAAOA,GAAP;AAAa;AACrB,KALD;;AAMA,WACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,GAAG,EAAEF,IAAI,CAACG,EAAtB;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,YAAY,EAAE;AAAnC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAEJ,IAAI,CAACD,IAAI,CAACM,KAAN,CADb;AAEE,MAAA,KAAK,EAAEN,IAAI,CAACM,KAFd;AAGE,MAAA,OAAO,EAAEjB,SAAS,CAACkB,QAAV,CAAmBP,IAAI,CAACM,KAAxB,CAHX;AAIE,MAAA,QAAQ,EAAE,CAACE,CAAD,EAAI;AAAEtB,QAAAA;AAAF,OAAJ,KAAkBK,QAAQ,CAACL,KAAD,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEe,IAAI,CAACD,IAAI,CAACM,KAAN,CAAvB;AAAqC,MAAA,WAAW,EAAEN,IAAI,CAACS,WAAvD;AAAoE,MAAA,GAAG,EAAET,IAAI,CAACU,GAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD,GAjBA,CATH,EA2BE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAFF,CADF,CA3BF,EAmCE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAE3B,YAHX;AAIE,IAAA,YAAY,EAAEU,eAJhB;AAKE,IAAA,QAAQ,EAAE,CAACe,CAAD,EAAI;AAAEtB,MAAAA;AAAF,KAAJ,KAAkBQ,kBAAkB,CAACR,KAAD,CALhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnCF,EA2CE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFF,CADF,CA3CF,EAmDE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,CAACmB,GAAZ,CAAgBC,IAAI,IAAI;AACvB,WACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,GAAG,EAAEA,IAAI,CAACG,EAAtB;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAEJ,IAAI,CAACM,KADd;AAEE,MAAA,KAAK,EAAEN,IAAI,CAACM,KAFd;AAGE,MAAA,OAAO,EAAEX,YAAY,CAACY,QAAb,CAAsBP,IAAI,CAACM,KAA3B,CAHX;AAIE,MAAA,QAAQ,EAAE,CAACE,CAAD,EAAI;AAAEtB,QAAAA;AAAF,OAAJ,KAAkBU,cAAc,CAACV,KAAD,CAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD,GAVA,CADH,CAnDF,EAgEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEM,gBADX;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,EAAE,EAAEpB,IAHN;AAIE,IAAA,EAAE,EAAC,WAJL;AAKE,IAAA,OAAO,MALT;AAME,IAAA,QAAQ,EAAE,CAACyB,CANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhEF,CADF,CADF;AA8ED,CA3FD;;AA6FA,eAAeV,aAAf","sourcesContent":["import React, { useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Form, Checkbox, Header, Button, Dropdown } from 'semantic-ui-react';\nimport { EQUIPMENT_LIST, MUSCLE_LIST } from '../constants';\nimport { WorkoutContext } from '../context.js';\nimport EquipWindow from './EquipWindow';\n\nconst roundOptions = [\n  {\n    key: 1,\n    text: '1 exercise',\n    value: 1\n  },\n  {\n    key: 2,\n    text: '2 exercises',\n    value: 2\n  },\n  {\n    key: 4,\n    text: '4 exercises',\n    value: 4\n  },\n  {\n    key: 6,\n    text: '6 exercises',\n    value: 6\n  },\n  {\n    key: 8,\n    text: '8 exercises',\n    value: 8\n  },\n  {\n    key: 16,\n    text: '16 exercises',\n    value: 16\n  }\n];\n\nconst EquipmentForm = () => {\n  const workoutContext = useContext(WorkoutContext);\n  const {\n    equipment,\n    update,\n    addEquip,\n    generateWorkouts,\n    exercisesAmount,\n    setExercisesAmount,\n    muscleGroups,\n    addMuscleGroup\n  } = workoutContext;\n  let a = update();\n  return (\n    <Segment padded color=\"blue\" style={{ width: \"80%\" }}>\n      <Form size=\"large\">\n        <Form.Field>\n          <Header color=\"blue\" dividing>\n            What Equipment Do You Have?\n            <Header.Subheader>\n              Selecting more than one option will give you different workouts for different equipments.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        {EQUIPMENT_LIST.map(item => {\n          const name = (str) => {\n            if (str === \"None\") {\n              return \"Bodyweight\";\n            }\n            else { return str; }\n          }\n          return (\n            <Form.Field key={item.id} style={{ textAlign: \"left\", marginBottom: \"calc(1em - 13.84px)\" }}>\n              <Checkbox\n                label={name(item.title)}\n                value={item.title}\n                checked={equipment.includes(item.title)}\n                onChange={(e, { value }) => addEquip(value)} />\n              <EquipWindow name={name(item.title)} description={item.description} url={item.url} />\n            </Form.Field>\n          )\n        })}\n        <Form.Field>\n          <Header dividing color=\"blue\">\n            How Many Rounds?\n            <Header.Subheader>\n              Specify how many different exercises you would like to perform.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            fluid\n            selection\n            options={roundOptions}\n            defaultValue={exercisesAmount}\n            onChange={(e, { value }) => setExercisesAmount(value)} />\n        </Form.Field>\n        <Form.Field>\n          <Header dividing color=\"blue\">\n            What Muscle Groups?\n            <Header.Subheader>\n              Specify what types of exercise you would like to perform.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        <Form.Field>\n          {MUSCLE_LIST.map(item => {\n            return (\n              <Form.Field key={item.id} style={{ textAlign: \"left\" }}>\n                <Checkbox\n                  label={item.title}\n                  value={item.title}\n                  checked={muscleGroups.includes(item.title)}\n                  onChange={(e, { value }) => addMuscleGroup(value)} />\n              </Form.Field>\n            )\n          })}\n        </Form.Field>\n        <Button\n          onClick={generateWorkouts}\n          size=\"large\"\n          as={Link}\n          to='/workouts'\n          primary\n          disabled={!a}>\n          GENERATE WORKOUT\n        </Button>\n      </Form>\n    </Segment>\n  );\n}\n\nexport default EquipmentForm"]},"metadata":{},"sourceType":"module"}