{"ast":null,"code":"import _slicedToArray from\"/Users/utkarshmishra/TeamOrange/workout-generator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{Grid,Header,Button,Segment}from'semantic-ui-react';import WorkoutList from'../Components/WorkoutList';import ActiveWorkoutTimer from'../Components/ActiveWorkoutTimer';import{Link}from'react-router-dom';import{WorkoutContext}from'../context';var WorkoutsPage=function WorkoutsPage(_ref){var user=_ref.user;var workoutContext=useContext(WorkoutContext);var equipment=workoutContext.equipment,exercisesAmount=workoutContext.exercisesAmount,generateDisplayList=workoutContext.generateDisplayList;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),workingOut=_useState2[0],_setWorkingOut=_useState2[1];var selectedEquipment=equipment.length===1&equipment[0]===\"None\"?\"Bodyweight\":equipment.join(\", \").replace(\"None,\",\"Bodyweight,\");return!workingOut?React.createElement(Grid,{key:'content',centered:true,style:{marginTop:\"15px\"}},React.createElement(Grid.Row,null,React.createElement(WorkoutListHeader,{selectedEquipment:selectedEquipment,exercisesAmount:exercisesAmount,setWorkingOut:function setWorkingOut(){generateDisplayList();_setWorkingOut(true);}})),React.createElement(Grid.Row,null,React.createElement(WorkoutList,{user:user}))):React.createElement(ActiveWorkoutTimer,{cancel:function cancel(){return _setWorkingOut(!workingOut);}});};var WorkoutListHeader=function WorkoutListHeader(_ref2){var selectedEquipment=_ref2.selectedEquipment,exercisesAmount=_ref2.exercisesAmount,setWorkingOut=_ref2.setWorkingOut;return React.createElement(Segment,{color:\"blue\",style:{width:\"80%\",textAlign:\"left\",marginTop:\"20px\"}},React.createElement(Header,{dividing:true,as:\"h3\"},React.createElement(Header,{textAlign:\"center\",dividing:true,color:\"blue\"},\"Preview Workout\",React.createElement(Header.Subheader,{content:\"Watch tutorials, save workouts for later, and/or swap out workouts you don't like.\"})),React.createElement(Header.Subheader,{content:\"Selected Round Count:\"}),\"\".concat(exercisesAmount,\" Total Exercises\"),React.createElement(Header.Subheader,{content:\"Selected Workout Equipment:\"}),selectedEquipment),React.createElement(Grid,null,React.createElement(Grid.Column,{textAlign:\"center\"},React.createElement(Button.Group,{size:\"small\"},React.createElement(Button,{attached:\"left\",as:Link,primary:true,to:\"/\",icon:\"arrow left\",content:\"Back to Selection\"}),React.createElement(Button,{attached:\"right\",color:\"green\",icon:\"play\",content:\"Begin Workout\",onClick:setWorkingOut})))));};export default WorkoutsPage;","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/workout-generator/src/Pages/WorkoutsPage.js"],"names":["React","useContext","useState","Grid","Header","Button","Segment","WorkoutList","ActiveWorkoutTimer","Link","WorkoutContext","WorkoutsPage","user","workoutContext","equipment","exercisesAmount","generateDisplayList","workingOut","setWorkingOut","selectedEquipment","length","join","replace","marginTop","WorkoutListHeader","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Grid, Header, Button, Segment } from 'semantic-ui-react';\nimport WorkoutList from '../Components/WorkoutList';\nimport ActiveWorkoutTimer from '../Components/ActiveWorkoutTimer';\nimport { Link } from 'react-router-dom';\nimport { WorkoutContext } from '../context';\n\nconst WorkoutsPage = ({user}) => {\n  const workoutContext = useContext(WorkoutContext);\n  const { equipment, exercisesAmount, generateDisplayList } = workoutContext;\n\n  const [ workingOut, setWorkingOut ] = useState(false);\n \n  const selectedEquipment =\n    (equipment.length === 1 & equipment[0] === \"None\") ? \n    \"Bodyweight\" : \n    equipment.join(\", \").replace(\"None,\", \"Bodyweight,\")\n\n \n  return (\n    !workingOut ? \n    <Grid key={'content'} centered style={{ marginTop: \"15px\" }} >\n      <Grid.Row>\n        <WorkoutListHeader \n          selectedEquipment={selectedEquipment} \n          exercisesAmount={exercisesAmount} \n          setWorkingOut={() => {\n            generateDisplayList();\n            setWorkingOut(true)}}\n        />\n      </Grid.Row>\n      <Grid.Row>\n        <WorkoutList user={user} />\n      </Grid.Row>\n    </Grid>\n    :\n    <ActiveWorkoutTimer cancel={() => setWorkingOut(!workingOut)} />\n  );\n}\n\nconst WorkoutListHeader = ({ selectedEquipment, exercisesAmount, setWorkingOut }) => {\n  return (\n    <Segment color=\"blue\" style={{ width: \"80%\", textAlign: \"left\", marginTop: \"20px\"}}>\n      <Header dividing as=\"h3\">\n        <Header textAlign=\"center\" dividing color=\"blue\">\n          Preview Workout\n          <Header.Subheader content=\"Watch tutorials, save workouts for later, and/or swap out workouts you don't like.\" />\n        </Header>\n        <Header.Subheader content=\"Selected Round Count:\" />\n        {`${exercisesAmount} Total Exercises`}\n        <Header.Subheader content=\"Selected Workout Equipment:\" />\n        {selectedEquipment}\n      </Header>\n      <Grid>\n        <Grid.Column textAlign=\"center\">\n          <Button.Group size=\"small\">\n            <Button\n              attached=\"left\"\n              as={Link}\n              primary\n              to=\"/\"\n              icon=\"arrow left\"\n              content=\"Back to Selection\"\n            />\n            <Button\n              attached=\"right\"\n              color=\"green\"\n              icon=\"play\"\n              content=\"Begin Workout\"\n              onClick={setWorkingOut}\n            />\n          </Button.Group>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\n\nexport default WorkoutsPage"]},"metadata":{},"sourceType":"module"}