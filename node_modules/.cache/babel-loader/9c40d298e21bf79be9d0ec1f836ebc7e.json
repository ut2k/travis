{"ast":null,"code":"import React,{useContext}from'react';import{Link}from'react-router-dom';import{Segment,Form,Checkbox,Header,Button,Dropdown}from'semantic-ui-react';import{EQUIPMENT_LIST,MUSCLE_LIST}from'../constants';import{WorkoutContext}from'../context.js';import EquipWindow from'./EquipWindow';var roundOptions=[{key:1,text:'1 exercise',value:1},{key:2,text:'2 exercises',value:2},{key:4,text:'4 exercises',value:4},{key:6,text:'6 exercises',value:6},{key:8,text:'8 exercises',value:8},{key:16,text:'16 exercises',value:16}];var EquipmentForm=function EquipmentForm(){var workoutContext=useContext(WorkoutContext);var equipment=workoutContext.equipment,update=workoutContext.update,addEquip=workoutContext.addEquip,generateWorkouts=workoutContext.generateWorkouts,exercisesAmount=workoutContext.exercisesAmount,setExercisesAmount=workoutContext.setExercisesAmount,muscleGroups=workoutContext.muscleGroups,addMuscleGroup=workoutContext.addMuscleGroup;var a=update();return React.createElement(Segment,{padded:true,color:\"blue\",style:{width:\"80%\"}},React.createElement(Form,{size:\"large\"},React.createElement(Form.Field,null,React.createElement(Header,{color:\"blue\",dividing:true},\"What Equipment Do You Have?\",React.createElement(Header.Subheader,null,\"Selecting more than one option will give you different workouts for different equipments.\"))),EQUIPMENT_LIST.map(function(item){var name=function name(str){if(str===\"None\"){return\"Bodyweight\";}else{return str;}};return React.createElement(Form.Field,{key:item.id,style:{textAlign:\"left\",marginBottom:\"calc(1em - 13.84px)\"}},React.createElement(Checkbox,{label:name(item.title),value:item.title,checked:equipment.includes(item.title),onChange:function onChange(e,_ref){var value=_ref.value;return addEquip(value);}}),React.createElement(EquipWindow,{name:name(item.title),description:item.description,url:item.url}));}),React.createElement(Form.Field,null,React.createElement(Header,{dividing:true,color:\"blue\"},\"How Many Rounds?\",React.createElement(Header.Subheader,null,\"Specify how many different exercises you would like to perform.\"))),React.createElement(Form.Field,null,React.createElement(Dropdown,{fluid:true,selection:true,options:roundOptions,defaultValue:exercisesAmount,onChange:function onChange(e,_ref2){var value=_ref2.value;return setExercisesAmount(value);}})),React.createElement(Form.Field,null,React.createElement(Header,{dividing:true,color:\"blue\"},\"What Muscle Groups?\",React.createElement(Header.Subheader,null,\"Specify what types of exercise you would like to perform.\"))),React.createElement(Form.Field,null,MUSCLE_LIST.map(function(item){return React.createElement(Form.Field,{key:item.id,style:{textAlign:\"left\"}},React.createElement(Checkbox,{label:item.title,value:item.title,checked:muscleGroups.includes(item.title),onChange:function onChange(e,_ref3){var value=_ref3.value;return addMuscleGroup(value);}}));})),React.createElement(Button,{onClick:generateWorkouts,size:\"large\",as:Link,to:\"/workouts\",primary:true,disabled:!a},\"GENERATE WORKOUT\")));};export default EquipmentForm;","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/src/Components/EquipmentForm.js"],"names":["React","useContext","Link","Segment","Form","Checkbox","Header","Button","Dropdown","EQUIPMENT_LIST","MUSCLE_LIST","WorkoutContext","EquipWindow","roundOptions","key","text","value","EquipmentForm","workoutContext","equipment","update","addEquip","generateWorkouts","exercisesAmount","setExercisesAmount","muscleGroups","addMuscleGroup","a","width","map","item","name","str","id","textAlign","marginBottom","title","includes","e","description","url"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,CAAkBC,IAAlB,CAAwBC,QAAxB,CAAkCC,MAAlC,CAA0CC,MAA1C,CAAkDC,QAAlD,KAAkE,mBAAlE,CACA,OAASC,cAAT,CAAyBC,WAAzB,KAA4C,cAA5C,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnB,CACEC,GAAG,CAAE,CADP,CAEEC,IAAI,CAAE,YAFR,CAGEC,KAAK,CAAE,CAHT,CADmB,CAMnB,CACEF,GAAG,CAAE,CADP,CAEEC,IAAI,CAAE,aAFR,CAGEC,KAAK,CAAE,CAHT,CANmB,CAWnB,CACEF,GAAG,CAAE,CADP,CAEEC,IAAI,CAAE,aAFR,CAGEC,KAAK,CAAE,CAHT,CAXmB,CAgBnB,CACEF,GAAG,CAAE,CADP,CAEEC,IAAI,CAAE,aAFR,CAGEC,KAAK,CAAE,CAHT,CAhBmB,CAqBnB,CACEF,GAAG,CAAE,CADP,CAEEC,IAAI,CAAE,aAFR,CAGEC,KAAK,CAAE,CAHT,CArBmB,CA0BnB,CACEF,GAAG,CAAE,EADP,CAEEC,IAAI,CAAE,cAFR,CAGEC,KAAK,CAAE,EAHT,CA1BmB,CAArB,CAiCA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,cAAc,CAAGjB,UAAU,CAACU,cAAD,CAAjC,CAD0B,GAGxBQ,CAAAA,SAHwB,CAWtBD,cAXsB,CAGxBC,SAHwB,CAIxBC,MAJwB,CAWtBF,cAXsB,CAIxBE,MAJwB,CAKxBC,QALwB,CAWtBH,cAXsB,CAKxBG,QALwB,CAMxBC,gBANwB,CAWtBJ,cAXsB,CAMxBI,gBANwB,CAOxBC,eAPwB,CAWtBL,cAXsB,CAOxBK,eAPwB,CAQxBC,kBARwB,CAWtBN,cAXsB,CAQxBM,kBARwB,CASxBC,YATwB,CAWtBP,cAXsB,CASxBO,YATwB,CAUxBC,cAVwB,CAWtBR,cAXsB,CAUxBQ,cAVwB,CAY1B,GAAIC,CAAAA,CAAC,CAAGP,MAAM,EAAd,CACA,MACE,qBAAC,OAAD,EAAS,MAAM,KAAf,CAAgB,KAAK,CAAC,MAAtB,CAA6B,KAAK,CAAE,CAAEQ,KAAK,CAAE,KAAT,CAApC,EACE,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EACE,oBAAC,IAAD,CAAM,KAAN,MACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,QAAQ,KAA7B,gCAEE,oBAAC,MAAD,CAAQ,SAAR,kGAFF,CADF,CADF,CASGnB,cAAc,CAACoB,GAAf,CAAmB,SAAAC,IAAI,CAAI,CAC1B,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,GAAD,CAAS,CACpB,GAAIA,GAAG,GAAK,MAAZ,CAAoB,CAClB,MAAO,YAAP,CACD,CAFD,IAGK,CAAE,MAAOA,CAAAA,GAAP,CAAa,CACrB,CALD,CAMA,MACE,qBAAC,IAAD,CAAM,KAAN,EAAY,GAAG,CAAEF,IAAI,CAACG,EAAtB,CAA0B,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAqBC,YAAY,CAAE,qBAAnC,CAAjC,EACE,oBAAC,QAAD,EACE,KAAK,CAAEJ,IAAI,CAACD,IAAI,CAACM,KAAN,CADb,CAEE,KAAK,CAAEN,IAAI,CAACM,KAFd,CAGE,OAAO,CAAEjB,SAAS,CAACkB,QAAV,CAAmBP,IAAI,CAACM,KAAxB,CAHX,CAIE,QAAQ,CAAE,kBAACE,CAAD,UAAMtB,CAAAA,KAAN,MAAMA,KAAN,OAAkBK,CAAAA,QAAQ,CAACL,KAAD,CAA1B,EAJZ,EADF,CAME,oBAAC,WAAD,EAAa,IAAI,CAAEe,IAAI,CAACD,IAAI,CAACM,KAAN,CAAvB,CAAqC,WAAW,CAAEN,IAAI,CAACS,WAAvD,CAAoE,GAAG,CAAET,IAAI,CAACU,GAA9E,EANF,CADF,CAUD,CAjBA,CATH,CA2BE,oBAAC,IAAD,CAAM,KAAN,MACE,oBAAC,MAAD,EAAQ,QAAQ,KAAhB,CAAiB,KAAK,CAAC,MAAvB,qBAEE,oBAAC,MAAD,CAAQ,SAAR,wEAFF,CADF,CA3BF,CAmCE,oBAAC,IAAD,CAAM,KAAN,MACE,oBAAC,QAAD,EACE,KAAK,KADP,CAEE,SAAS,KAFX,CAGE,OAAO,CAAE3B,YAHX,CAIE,YAAY,CAAEU,eAJhB,CAKE,QAAQ,CAAE,kBAACe,CAAD,WAAMtB,CAAAA,KAAN,OAAMA,KAAN,OAAkBQ,CAAAA,kBAAkB,CAACR,KAAD,CAApC,EALZ,EADF,CAnCF,CA2CE,oBAAC,IAAD,CAAM,KAAN,MACE,oBAAC,MAAD,EAAQ,QAAQ,KAAhB,CAAiB,KAAK,CAAC,MAAvB,wBAEE,oBAAC,MAAD,CAAQ,SAAR,kEAFF,CADF,CA3CF,CAmDE,oBAAC,IAAD,CAAM,KAAN,MACGN,WAAW,CAACmB,GAAZ,CAAgB,SAAAC,IAAI,CAAI,CACvB,MACE,qBAAC,IAAD,CAAM,KAAN,EAAY,GAAG,CAAEA,IAAI,CAACG,EAAtB,CAA0B,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAjC,EACE,oBAAC,QAAD,EACE,KAAK,CAAEJ,IAAI,CAACM,KADd,CAEE,KAAK,CAAEN,IAAI,CAACM,KAFd,CAGE,OAAO,CAAEX,YAAY,CAACY,QAAb,CAAsBP,IAAI,CAACM,KAA3B,CAHX,CAIE,QAAQ,CAAE,kBAACE,CAAD,WAAMtB,CAAAA,KAAN,OAAMA,KAAN,OAAkBU,CAAAA,cAAc,CAACV,KAAD,CAAhC,EAJZ,EADF,CADF,CASD,CAVA,CADH,CAnDF,CAgEE,oBAAC,MAAD,EACE,OAAO,CAAEM,gBADX,CAEE,IAAI,CAAC,OAFP,CAGE,EAAE,CAAEpB,IAHN,CAIE,EAAE,CAAC,WAJL,CAKE,OAAO,KALT,CAME,QAAQ,CAAE,CAACyB,CANb,qBAhEF,CADF,CADF,CA8ED,CA3FD,CA6FA,cAAeV,CAAAA,aAAf","sourcesContent":["import React, { useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Segment, Form, Checkbox, Header, Button, Dropdown } from 'semantic-ui-react';\nimport { EQUIPMENT_LIST, MUSCLE_LIST } from '../constants';\nimport { WorkoutContext } from '../context.js';\nimport EquipWindow from './EquipWindow';\n\nconst roundOptions = [\n  {\n    key: 1,\n    text: '1 exercise',\n    value: 1\n  },\n  {\n    key: 2,\n    text: '2 exercises',\n    value: 2\n  },\n  {\n    key: 4,\n    text: '4 exercises',\n    value: 4\n  },\n  {\n    key: 6,\n    text: '6 exercises',\n    value: 6\n  },\n  {\n    key: 8,\n    text: '8 exercises',\n    value: 8\n  },\n  {\n    key: 16,\n    text: '16 exercises',\n    value: 16\n  }\n];\n\nconst EquipmentForm = () => {\n  const workoutContext = useContext(WorkoutContext);\n  const {\n    equipment,\n    update,\n    addEquip,\n    generateWorkouts,\n    exercisesAmount,\n    setExercisesAmount,\n    muscleGroups,\n    addMuscleGroup\n  } = workoutContext;\n  let a = update();\n  return (\n    <Segment padded color=\"blue\" style={{ width: \"80%\" }}>\n      <Form size=\"large\">\n        <Form.Field>\n          <Header color=\"blue\" dividing>\n            What Equipment Do You Have?\n            <Header.Subheader>\n              Selecting more than one option will give you different workouts for different equipments.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        {EQUIPMENT_LIST.map(item => {\n          const name = (str) => {\n            if (str === \"None\") {\n              return \"Bodyweight\";\n            }\n            else { return str; }\n          }\n          return (\n            <Form.Field key={item.id} style={{ textAlign: \"left\", marginBottom: \"calc(1em - 13.84px)\" }}>\n              <Checkbox\n                label={name(item.title)}\n                value={item.title}\n                checked={equipment.includes(item.title)}\n                onChange={(e, { value }) => addEquip(value)} />\n              <EquipWindow name={name(item.title)} description={item.description} url={item.url} />\n            </Form.Field>\n          )\n        })}\n        <Form.Field>\n          <Header dividing color=\"blue\">\n            How Many Rounds?\n            <Header.Subheader>\n              Specify how many different exercises you would like to perform.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            fluid\n            selection\n            options={roundOptions}\n            defaultValue={exercisesAmount}\n            onChange={(e, { value }) => setExercisesAmount(value)} />\n        </Form.Field>\n        <Form.Field>\n          <Header dividing color=\"blue\">\n            What Muscle Groups?\n            <Header.Subheader>\n              Specify what types of exercise you would like to perform.\n            </Header.Subheader>\n          </Header>\n        </Form.Field>\n        <Form.Field>\n          {MUSCLE_LIST.map(item => {\n            return (\n              <Form.Field key={item.id} style={{ textAlign: \"left\" }}>\n                <Checkbox\n                  label={item.title}\n                  value={item.title}\n                  checked={muscleGroups.includes(item.title)}\n                  onChange={(e, { value }) => addMuscleGroup(value)} />\n              </Form.Field>\n            )\n          })}\n        </Form.Field>\n        <Button\n          onClick={generateWorkouts}\n          size=\"large\"\n          as={Link}\n          to='/workouts'\n          primary\n          disabled={!a}>\n          GENERATE WORKOUT\n        </Button>\n      </Form>\n    </Segment>\n  );\n}\n\nexport default EquipmentForm"]},"metadata":{},"sourceType":"module"}