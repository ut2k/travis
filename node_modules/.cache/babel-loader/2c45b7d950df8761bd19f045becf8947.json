{"ast":null,"code":"import _slicedToArray from \"/Users/utkarshmishra/TeamOrange/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/utkarshmishra/TeamOrange/src/context.js\";\nimport React, { createContext, useState } from 'react';\nimport * as data from './wkouts.json';\nimport { shuffleList } from './utilities';\nconst Exercises = data.Exercises; // const grabExercises = async () => {\n//   const dataPayload = await firebaseDb.once('value');\n//   console.log(dataPayload.val());\n//   return dataPayload.exists() ? dataPayload.val() : {};\n// };\n//grabExercises();\n\nconst exercises = Object.values(Exercises);\nconst WorkoutContext = createContext(null);\nconst Provider = WorkoutContext.Provider;\nconst initialWorkouts = shuffleList(exercises.filter(val => {\n  return val.Equipment === \"None\";\n})).slice(0, 8);\n\nconst StateProvider = ({\n  children\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        possible = _useState2[0],\n        setPossible = _useState2[1];\n\n  const _useState3 = useState([\"None\"]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        equipment = _useState4[0],\n        setEquipment = _useState4[1];\n\n  const _useState5 = useState([\"None\"]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        muscleGroups = _useState6[0],\n        setMuscleGroups = _useState6[1];\n\n  const _useState7 = useState(initialWorkouts),\n        _useState8 = _slicedToArray(_useState7, 2),\n        workouts = _useState8[0],\n        setWorkouts = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        replace = _useState10[0],\n        setReplace = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        favworkouts = _useState12[0],\n        setFavworkouts = _useState12[1];\n\n  const _useState13 = useState(8),\n        _useState14 = _slicedToArray(_useState13, 2),\n        exercisesAmount = _useState14[0],\n        setExercisesAmount = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        countdown = _useState16[0],\n        setCountdown = _useState16[1];\n\n  const _useState17 = useState(0),\n        _useState18 = _slicedToArray(_useState17, 2),\n        currentWorkoutID = _useState18[0],\n        setCurrentWorkoutID = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        displayList = _useState20[0],\n        setDisplayList = _useState20[1];\n\n  const update = () => {\n    if (equipment.length > 0 && muscleGroups.length > 1) {\n      setPossible(true);\n    } else {\n      setPossible(false);\n    }\n\n    return possible;\n  };\n\n  const addEquip = value => {\n    equipment.includes(value) ? setEquipment(equipment.filter(x => x !== value)) : setEquipment([...equipment, value]);\n  };\n\n  const addMuscleGroup = value => {\n    muscleGroups.includes(value) ? setMuscleGroups(muscleGroups.filter(x => x !== value)) : setMuscleGroups([...muscleGroups, value]);\n  };\n\n  const toggleFavs = value => {\n    favworkouts.map(val => val.Title).includes(value.Title) ? setFavworkouts(favworkouts.filter(x => x.Title !== value.Title)) : setFavworkouts([...favworkouts, value]);\n  };\n\n  const generateWorkouts = () => {\n    const values = exercises.filter(val => {\n      // console.log(\"generateWorkouts called\")\n      // console.log(val)\n      return equipment.includes(val.Equipment) && muscleGroups.includes(val[\"Primary Muscle Group\"]);\n    }); // values = values.filter(val => {\n    //   return muscleGroups.includes(val[\"Primary Muscle Group\"])\n    // })\n\n    setCurrentWorkoutID(0);\n    let substr = shuffleList(values);\n    console.log(substr);\n    setWorkouts(substr.slice(0, exercisesAmount));\n    console.log(substr.slice(0, exercisesAmount));\n    setReplace(substr.slice(exercisesAmount, substr.length));\n    console.log(substr.slice(exercisesAmount, substr.length));\n  };\n\n  const generateDisplayList = () => {\n    let display = [];\n    const restItem = exercises.filter(val => val.Title === \"Rest\")[0];\n    console.log(restItem);\n\n    for (const workout of workouts) {\n      display.push(workout);\n      display.push(restItem);\n    }\n\n    setDisplayList(display);\n  };\n\n  const replaceWorkout = clickElement => {\n    if (replace.length > 0) {\n      let val = replace;\n      let element = val.pop();\n      let val1 = workouts;\n      let index = val1.indexOf(clickElement);\n      val1[index] = element;\n      setReplace(val);\n      setWorkouts(val1);\n    }\n  };\n\n  const api = {\n    equipment,\n    update,\n    addEquip,\n    muscleGroups,\n    addMuscleGroup,\n    workouts,\n    generateWorkouts,\n    exercisesAmount,\n    setExercisesAmount,\n    countdown,\n    setCountdown,\n    favworkouts,\n    toggleFavs,\n    replaceWorkout,\n    currentWorkoutID,\n    setCurrentWorkoutID,\n    displayList,\n    generateDisplayList\n  };\n  return React.createElement(Provider, {\n    value: api,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, children);\n};\n\nexport { WorkoutContext, StateProvider };","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/src/context.js"],"names":["React","createContext","useState","data","shuffleList","Exercises","exercises","Object","values","WorkoutContext","Provider","initialWorkouts","filter","val","Equipment","slice","StateProvider","children","possible","setPossible","equipment","setEquipment","muscleGroups","setMuscleGroups","workouts","setWorkouts","replace","setReplace","favworkouts","setFavworkouts","exercisesAmount","setExercisesAmount","countdown","setCountdown","currentWorkoutID","setCurrentWorkoutID","displayList","setDisplayList","update","length","addEquip","value","includes","x","addMuscleGroup","toggleFavs","map","Title","generateWorkouts","substr","console","log","generateDisplayList","display","restItem","workout","push","replaceWorkout","clickElement","element","pop","val1","index","indexOf","api"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react';\nimport * as data from './wkouts.json';\nimport { shuffleList } from './utilities';\n\nconst { Exercises } = data;\n\n// const grabExercises = async () => {\n//   const dataPayload = await firebaseDb.once('value');\n\n//   console.log(dataPayload.val());\n\n//   return dataPayload.exists() ? dataPayload.val() : {};\n// };\n//grabExercises();\n\nconst exercises = Object.values(Exercises);\nconst WorkoutContext = createContext(null);\nconst { Provider } = WorkoutContext;\n\nconst initialWorkouts = shuffleList(exercises.filter(val => {\n  return val.Equipment === \"None\"\n})).slice(0, 8)\n\nconst StateProvider = ({ children }) => {\n  const [possible, setPossible] = useState(false);\n  const [equipment, setEquipment] = useState([\"None\"]);\n  const [muscleGroups, setMuscleGroups] = useState([\"None\"]);\n  const [workouts, setWorkouts] = useState(initialWorkouts);\n  const [replace, setReplace] = useState([]);\n  const [favworkouts, setFavworkouts] = useState([]);\n  const [exercisesAmount, setExercisesAmount] = useState(8);\n  const [countdown, setCountdown] = useState(0);\n  const [currentWorkoutID, setCurrentWorkoutID] = useState(0);\n  const [displayList, setDisplayList] = useState([]);\n\n  \n  const update = () => {\n    \n    if (equipment.length > 0 && muscleGroups.length > 1) {\n      setPossible(true);\n    }\n    else {\n      setPossible(false);\n    }\n    return possible;\n  }\n\n  const addEquip = value => {\n    equipment.includes(value) ? setEquipment(equipment.filter(x => x !== value)) : setEquipment([...equipment, value]);\n  }\n\n  const addMuscleGroup = value => {\n    muscleGroups.includes(value)? setMuscleGroups(muscleGroups.filter(x => x !== value)):setMuscleGroups([...muscleGroups, value]);\n  }\n\n  const toggleFavs = value => {\n    favworkouts.map(val => val.Title).includes(value.Title) ?\n      setFavworkouts(favworkouts.filter(x => x.Title !== value.Title)) :\n      setFavworkouts([...favworkouts, value])\n  }\n\n  const generateWorkouts = () => {\n    const values = exercises.filter(val => {\n      // console.log(\"generateWorkouts called\")\n      // console.log(val)\n      return equipment.includes(val.Equipment) && muscleGroups.includes(val[\"Primary Muscle Group\"]);\n    })\n\n    // values = values.filter(val => {\n    //   return muscleGroups.includes(val[\"Primary Muscle Group\"])\n    // })\n\n    setCurrentWorkoutID(0);\n    let substr = shuffleList(values);\n    console.log(substr);\n    setWorkouts(substr.slice(0, exercisesAmount));\n    console.log(substr.slice(0, exercisesAmount))\n    setReplace(substr.slice(exercisesAmount, substr.length));\n    console.log(substr.slice(exercisesAmount, substr.length))\n  }\n\n  const generateDisplayList = () => {\n    let display = []\n    const restItem = exercises.filter(val => val.Title === \"Rest\")[0]\n    console.log(restItem);\n    \n    for (const workout of workouts) {\n      display.push(workout)\n      display.push(restItem)\n    }\n    setDisplayList(display)\n  }\n\n  const replaceWorkout = clickElement => {\n    if (replace.length > 0){\n      let val = replace;\n    let element = val.pop();\n    let val1 = workouts;\n    let index = val1.indexOf(clickElement);\n    val1[index] = element;\n    setReplace(val);\n    setWorkouts(val1);\n    }\n  }\n\n  const api = {\n    equipment,\n    update,\n    \n    addEquip,\n    muscleGroups,\n    addMuscleGroup,\n    workouts,\n    generateWorkouts,\n    exercisesAmount,\n    setExercisesAmount,\n    countdown,\n    setCountdown,\n    favworkouts,\n    toggleFavs,\n    replaceWorkout,\n    currentWorkoutID,\n    setCurrentWorkoutID,\n    displayList,\n    generateDisplayList\n  };\n\n  return <Provider value={api}>{children}</Provider>;\n}\n\nexport { WorkoutContext, StateProvider };"]},"metadata":{},"sourceType":"module"}