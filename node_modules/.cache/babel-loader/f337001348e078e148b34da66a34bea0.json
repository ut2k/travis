{"ast":null,"code":"import _slicedToArray from \"/Users/utkarshmishra/TeamOrange/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/utkarshmishra/TeamOrange/src/Components/Workout.js\";\nimport React, { useState } from 'react';\nimport { Card, Embed, Button, Accordion } from 'semantic-ui-react';\n\nconst Workout = ({\n  exercise,\n  toggleFavs,\n  favworkouts,\n  replaceWorkout,\n  refresh,\n  user,\n  saved\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        videoHidden = _useState2[0],\n        setVideoHidden = _useState2[1];\n\n  console.log(exercise.Title);\n  return React.createElement(Card, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, user ? React.createElement(Button, {\n    floated: \"right\",\n    icon: favworkouts.includes(exercise) ? \"heart\" : \"heart outline\",\n    basic: favworkouts.includes(exercise) ? false : true,\n    color: \"blue\",\n    onClick: () => toggleFavs(exercise),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : null, !saved ? React.createElement(Button, {\n    floated: \"right\",\n    color: \"blue\",\n    basic: true,\n    icon: \"exchange\",\n    content: \"Swap\",\n    onClick: () => {\n      replaceWorkout(exercise);\n      refresh();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : null, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, exercise.Title), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Duration: \", exercise.Duration, \" seconds\"), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Equipment: \", exercise.Equipment), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Accordion, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Accordion.Title, {\n    active: videoHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: videoHidden ? \"close\" : \"video\",\n    basic: videoHidden ? true : false,\n    color: \"blue\",\n    content: videoHidden ? \"Close Tutorial\" : \"Watch Tutorial\",\n    onClick: () => setVideoHidden(!videoHidden),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Accordion.Content, {\n    active: videoHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Embed, {\n    active: true,\n    id: exercise.Tutorial,\n    source: \"youtube\",\n    style: {\n      maxWidth: \"400px\",\n      maxHeight: \"300px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))))));\n};\n\nexport default Workout;","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/src/Components/Workout.js"],"names":["React","useState","Card","Embed","Button","Accordion","Workout","exercise","toggleFavs","favworkouts","replaceWorkout","refresh","user","saved","videoHidden","setVideoHidden","console","log","Title","includes","Duration","Equipment","Tutorial","maxWidth","maxHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,SAA9B,QAA+C,mBAA/C;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA,WAAxB;AAAsCC,EAAAA,cAAtC;AAAsDC,EAAAA,OAAtD;AAA+DC,EAAAA,IAA/D;AAAqEC,EAAAA;AAArE,CAAD,KAAgF;AAAA,oBACxDZ,QAAQ,CAAC,KAAD,CADgD;AAAA;AAAA,QACvFa,WADuF;AAAA,QAC1EC,cAD0E;;AAG9FC,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,KAArB;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,GACH,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,IAAI,EAAEH,WAAW,CAACU,QAAZ,CAAqBZ,QAArB,IAAiC,OAAjC,GAA2C,eAFnD;AAGE,IAAA,KAAK,EAAEE,WAAW,CAACU,QAAZ,CAAqBZ,QAArB,IAAiC,KAAjC,GAAyC,IAHlD;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,QAAD,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAQH,IATJ,EAUG,CAACM,KAAD,GACC,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,OAAO,EAAC,MALV;AAME,IAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,cAAc,CAACH,QAAD,CAAd;AACAI,MAAAA,OAAO;AACR,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAYG,IAtBN,EAwBE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcJ,QAAQ,CAACW,KAAvB,CAxBF,EAyBE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsBX,QAAQ,CAACa,QAA/B,aAzBF,EA0BE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuBb,QAAQ,CAACc,SAAhC,CA1BF,EA2BE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,MAAM,EAAEP,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEA,WAAW,GAAG,OAAH,GAAa,OADhC;AAEE,IAAA,KAAK,EAAEA,WAAW,GAAG,IAAH,GAAU,KAF9B;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAEA,WAAW,GAAG,gBAAH,GAAsB,gBAJ5C;AAKE,IAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE,oBAAC,SAAD,CAAW,OAAX;AAAmB,IAAA,MAAM,EAAEA,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,EAAE,EAAEP,QAAQ,CAACe,QAFf;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF,CA3BF,CADF,CADF;AAoDG,CAxDL;;AA0DA,eAAelB,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Embed, Button, Accordion } from 'semantic-ui-react';\n\n\nconst Workout = ({ exercise, toggleFavs, favworkouts , replaceWorkout, refresh, user, saved}) =>{\n  const [videoHidden, setVideoHidden] = useState(false)\n  \n  console.log(exercise.Title);\n  return (\n    <Card color=\"blue\">\n      <Card.Content>\n        {user ? \n          <Button\n            floated=\"right\"\n            icon={favworkouts.includes(exercise) ? \"heart\" : \"heart outline\"}\n            basic={favworkouts.includes(exercise) ? false : true}\n            color=\"blue\"\n            onClick={() => toggleFavs(exercise)}\n          />\n        : null}\n        {!saved ? \n          <Button\n            floated=\"right\"\n            color=\"blue\"\n            basic\n            icon=\"exchange\"\n            content=\"Swap\"\n            onClick={() => {\n              replaceWorkout(exercise);\n              refresh();\n            }}\n          />\n          : null\n        }\n        <Card.Header>{exercise.Title}</Card.Header>\n        <Card.Meta>Duration: {exercise.Duration} seconds</Card.Meta>\n        <Card.Meta>Equipment: {exercise.Equipment}</Card.Meta>\n        <Card.Description>\n          <Accordion>\n            <Accordion.Title active={videoHidden}>\n              <Button\n                icon={videoHidden ? \"close\" : \"video\"}\n                basic={videoHidden ? true : false}\n                color=\"blue\"\n                content={videoHidden ? \"Close Tutorial\" : \"Watch Tutorial\"}\n                onClick={() => setVideoHidden(!videoHidden)}\n              />\n            </Accordion.Title>\n            <Accordion.Content active={videoHidden}>\n              <Embed\n                active\n                id={exercise.Tutorial}\n                source=\"youtube\"\n                style={{ maxWidth: \"400px\", maxHeight: \"300px\" }}\n              />\n            </Accordion.Content>\n          </Accordion>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );};\n\nexport default Workout"]},"metadata":{},"sourceType":"module"}