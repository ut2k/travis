{"ast":null,"code":"import _slicedToArray from \"/Users/utkarshmishra/TeamOrange/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/utkarshmishra/TeamOrange/src/Components/ActiveWorkoutTimer.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Header, Button, Grid, Confirm } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport { WorkoutContext } from \"../context\";\nimport Timer from \"react-compound-timer\";\n\nconst ActiveWorkoutTimer = ({\n  cancel\n}) => {\n  const workoutContext = useContext(WorkoutContext);\n  const workouts = workoutContext.displayList,\n        currentWorkoutID = workoutContext.currentWorkoutID;\n\n  const withTimer = timerProps => WrappedComponent => wrappedComponentProps => React.createElement(Timer, Object.assign({}, timerProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), timerRenderProps => React.createElement(WrappedComponent, Object.assign({}, wrappedComponentProps, {\n    timer: timerRenderProps,\n    workout: workoutContext,\n    cancel: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n\n  const TimerHOC = withTimer({\n    formatValue: x => `${x < 10 ? `0${x}` : x}`,\n    direction: \"backward\",\n    timeToUpdate: 100,\n    startImmediately: true,\n    initialTime: workouts[currentWorkoutID].Duration * 1000\n  })(WorkoutQueue);\n  return React.createElement(TimerHOC, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n};\n\nconst StartButton = ({\n  start,\n  pause,\n  resume,\n  getTimerState,\n  getTime\n}) => {\n  const status = getTimerState();\n  const time = getTime();\n  console.log(status);\n  return React.createElement(Button, {\n    icon: status === \"STOPPED\" | status === \"INITED\" ? \"play\" : status === \"PAUSED\" ? \"play\" : \"pause\",\n    size: \"massive\",\n    circular: true,\n    disabled: time === 0,\n    positive: true,\n    onClick: status === \"STOPPED\" | status === \"INITED\" ? start : status === \"PAUSED\" ? resume : pause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  });\n};\n\nconst ResetButton = ({\n  getTimerState,\n  reset,\n  getTime\n}) => {\n  const status = getTimerState();\n  const time = getTime();\n  return React.createElement(Button, {\n    icon: \"redo\",\n    circular: true,\n    size: \"big\",\n    disabled: status === \"STOPPED\" | time === 0,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  });\n};\n\nconst NextButton = ({\n  next\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        popup = _useState2[0],\n        setPopup = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Button, {\n    icon: \"forward\",\n    circular: true,\n    size: \"big\",\n    onClick: () => setPopup(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Confirm, {\n    open: popup,\n    content: \"Are you sure you want to skip this exercise?\",\n    confirmButton: \"Yes\",\n    cancelButton: \"No\",\n    onConfirm: next,\n    onCancel: () => setPopup(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n};\n\nclass WorkoutQueue extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      endWorkout: false\n    };\n  }\n\n  componentDidMount() {\n    const _this$props$workout = this.props.workout,\n          setCurrentWorkoutID = _this$props$workout.setCurrentWorkoutID,\n          workouts = _this$props$workout.displayList,\n          currentWorkoutID = _this$props$workout.currentWorkoutID;\n    const _this$props$timer = this.props.timer,\n          setCheckpoints = _this$props$timer.setCheckpoints,\n          setTime = _this$props$timer.setTime;\n\n    const next = () => {\n      if (currentWorkoutID < workouts.length - 1) {\n        setTime(workouts[currentWorkoutID + 1].Duration);\n        setCurrentWorkoutID(currentWorkoutID + 1);\n      } else {\n        this.setState({\n          endWorkout: true\n        });\n      }\n    };\n\n    setCheckpoints([{\n      time: 0,\n      callback: () => next()\n    }]);\n  }\n\n  render() {\n    const cancel = this.props.cancel;\n    const endWorkout = this.state.endWorkout;\n    const _this$props$workout2 = this.props.workout,\n          workouts = _this$props$workout2.displayList,\n          currentWorkoutID = _this$props$workout2.currentWorkoutID,\n          setCurrentWorkoutID = _this$props$workout2.setCurrentWorkoutID;\n    const _this$props$timer2 = this.props.timer,\n          getTime = _this$props$timer2.getTime,\n          getTimerState = _this$props$timer2.getTimerState,\n          start = _this$props$timer2.start,\n          resume = _this$props$timer2.resume,\n          pause = _this$props$timer2.pause,\n          reset = _this$props$timer2.reset,\n          setTime = _this$props$timer2.setTime;\n\n    const next = () => {\n      if (currentWorkoutID < workouts.length - 1) {\n        setTime(workouts[currentWorkoutID + 1].Duration);\n        setCurrentWorkoutID(currentWorkoutID + 1);\n      } else {\n        this.setState({\n          endWorkout: true\n        });\n      }\n\n      this.setState({\n        popup: true\n      });\n    };\n\n    return React.createElement(Grid, {\n      style: {\n        marginTop: \"50px\"\n      },\n      centered: true,\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, !endWorkout ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Header, {\n      inverted: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, workouts[currentWorkoutID].Title)), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Header, {\n      inverted: true,\n      style: {\n        fontSize: \"80px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Timer.Minutes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), \":\", React.createElement(Timer.Seconds, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Header, {\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, `NEXT UP: ${workouts[currentWorkoutID + 1] ? workouts[currentWorkoutID + 1].Title : 'DONE'}`)), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      verticalAlign: \"middle\",\n      textAlign: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ResetButton, {\n      reset: reset,\n      getTimerState: getTimerState,\n      getTime: getTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(StartButton, {\n      getTimerState: getTimerState,\n      getTime: getTime,\n      start: start,\n      pause: pause,\n      resume: resume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      verticalAlign: \"middle\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(NextButton, {\n      next: next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"Back to Workout Preview\",\n      onClick: cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Header, {\n      size: \"large\",\n      inverted: true,\n      content: \"END OF WORKOUT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"Back To Workout Generator\",\n      as: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ActiveWorkoutTimer;","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/src/Components/ActiveWorkoutTimer.js"],"names":["React","useContext","useState","Header","Button","Grid","Confirm","Link","WorkoutContext","Timer","ActiveWorkoutTimer","cancel","workoutContext","workouts","displayList","currentWorkoutID","withTimer","timerProps","WrappedComponent","wrappedComponentProps","timerRenderProps","TimerHOC","formatValue","x","direction","timeToUpdate","startImmediately","initialTime","Duration","WorkoutQueue","StartButton","start","pause","resume","getTimerState","getTime","status","time","console","log","ResetButton","reset","NextButton","next","popup","setPopup","Component","state","endWorkout","componentDidMount","props","workout","setCurrentWorkoutID","timer","setCheckpoints","setTime","length","setState","callback","render","marginTop","Title","fontSize"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Header, Button, Grid, Confirm } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport { WorkoutContext } from \"../context\";\nimport Timer from \"react-compound-timer\";\n\nconst ActiveWorkoutTimer = ({ cancel }) => {\n  const workoutContext = useContext(WorkoutContext);\n  const {displayList: workouts, currentWorkoutID } = workoutContext;\n\n  const withTimer = timerProps => WrappedComponent => wrappedComponentProps => (\n    <Timer {...timerProps}>\n      {timerRenderProps => \n        <WrappedComponent \n          {...wrappedComponentProps} \n          timer={timerRenderProps} \n          workout={workoutContext}\n          cancel={cancel} \n        />\n      }\n    </Timer>\n  )\n\n  const TimerHOC = withTimer({\n    formatValue: x => `${x < 10 ? `0${x}` : x}`,\n    direction: \"backward\",\n    timeToUpdate: 100,\n    startImmediately: true,\n    initialTime: workouts[currentWorkoutID].Duration * 1000\n  })(WorkoutQueue);\n\n  return (\n    <TimerHOC />\n  );\n};\n\nconst StartButton = ({ start, pause, resume, getTimerState, getTime }) => {\n  const status = getTimerState();\n  const time = getTime();\n  console.log(status);\n  return (\n    <Button\n      icon={\n        (status === \"STOPPED\") | (status === \"INITED\")\n          ? \"play\"\n          : status === \"PAUSED\"\n          ? \"play\"\n          : \"pause\"\n      }\n      size=\"massive\"\n      circular\n      disabled={time === 0}\n      positive\n      onClick={\n        (status === \"STOPPED\") | (status === \"INITED\")\n          ? start\n          : status === \"PAUSED\"\n          ? resume\n          : pause\n      }\n    >\n    </Button>\n  );\n};\n\nconst ResetButton = ({ getTimerState, reset, getTime }) => {\n  const status = getTimerState();\n  const time = getTime();\n  return (\n    <Button\n      icon=\"redo\"\n      circular\n      size=\"big\"\n      disabled={(status === \"STOPPED\") | (time === 0)}\n      onClick={reset}\n    />\n  );\n};\n\nconst NextButton = ({ next }) => {\n  const [popup, setPopup] = useState(false);\n  return( \n  <div>\n  <Button icon=\"forward\" circular size=\"big\" onClick={() => setPopup(true)} />\n  <Confirm \n  open={popup} \n  content={\"Are you sure you want to skip this exercise?\"}\n  confirmButton={\"Yes\"}\n  cancelButton={\"No\"}\n  onConfirm={next}\n  onCancel = {()=> setPopup(false)}\n  />\n  </div>\n  )};\n\nclass WorkoutQueue extends React.Component {\n  state={\n    endWorkout: false\n  };\n\n  componentDidMount(){\n    const { setCurrentWorkoutID, displayList: workouts, currentWorkoutID } = this.props.workout;\n    const { setCheckpoints, setTime  } = this.props.timer;\n\n    const next = () => {\n      if (currentWorkoutID < workouts.length - 1) {\n        setTime(workouts[currentWorkoutID + 1].Duration);\n        setCurrentWorkoutID(currentWorkoutID + 1);\n      }\n      else {\n        this.setState({ endWorkout: true })\n      }\n    };\n\n    setCheckpoints([\n      {\n        time: 0,\n        callback: () => next()\n      }\n    ]);\n  };\n\n  render() {\n    const { cancel } = this.props;\n    const { endWorkout } = this.state;\n    const { displayList: workouts, currentWorkoutID, setCurrentWorkoutID } = this.props.workout;\n    const { getTime, getTimerState, start, resume, pause, reset, setTime  } = this.props.timer;\n    \n    const next = () => {\n      if (currentWorkoutID < workouts.length - 1) {\n        setTime(workouts[currentWorkoutID + 1].Duration);\n        setCurrentWorkoutID(currentWorkoutID + 1);\n      }\n      else {\n        this.setState({ endWorkout: true })\n      }\n      this.setState({popup: true})\n    };\n\n    return (\n      <Grid style={{marginTop: \"50px\" }} centered columns={3}>\n        {!endWorkout ? \n        <React.Fragment>\n          <Grid.Row>\n            <Header inverted size=\"large\" >\n              {workouts[currentWorkoutID].Title}\n            </Header>\n          </Grid.Row>\n          <Grid.Row>\n            <Header inverted style={{ fontSize: \"80px\" }}>\n              <Timer.Minutes />:<Timer.Seconds />\n            </Header>\n          </Grid.Row>\n          <Grid.Row>\n          <Header color=\"grey\">\n          {`NEXT UP: ${workouts[currentWorkoutID+1] ? workouts[currentWorkoutID+1].Title : 'DONE'}`}\n          </Header>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column verticalAlign=\"middle\" textAlign=\"right\">\n              <ResetButton\n                reset={reset}\n                getTimerState={getTimerState}\n                getTime={getTime}\n              />\n            </Grid.Column>\n            <Grid.Column verticalAlign=\"middle\">\n              <StartButton\n                getTimerState={getTimerState}\n                getTime={getTime}\n                start={start}\n                pause={pause}\n                resume={resume}\n              />\n            </Grid.Column>\n            <Grid.Column verticalAlign=\"middle\" textAlign=\"left\">\n              <NextButton next={next}/>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Button content=\"Back to Workout Preview\" onClick={cancel} />\n          </Grid.Row>\n        </React.Fragment>\n        :\n        <React.Fragment>\n          <Grid.Row>\n            <Header size=\"large\" inverted content=\"END OF WORKOUT\" />\n          </Grid.Row>\n          <Grid.Row>\n            <Button content=\"Back To Workout Generator\" as={Link} to=\"/\" />\n          </Grid.Row>\n        </React.Fragment>}\n      </Grid>\n    );\n  }\n}\n\nexport default ActiveWorkoutTimer;"]},"metadata":{},"sourceType":"module"}