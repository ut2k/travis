{"ast":null,"code":"import React,{useContext}from'react';import{Grid,Card,Header,Icon,Button,Segment,Divider}from'semantic-ui-react';import SavedList from'../Components/SavedList';import{WorkoutContext}from'../context';import StyledFirebaseAuth from'react-firebaseui/StyledFirebaseAuth';import{firebase}from'../firebaseDb';import'firebase/database';import\"firebase/auth\";var uiConfig={signInFlow:'popup',signInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID],callbacks:{signInSuccessWithAuthResult:function signInSuccessWithAuthResult(){return false;}}};var SignIn=function SignIn(){return React.createElement(StyledFirebaseAuth,{uiConfig:uiConfig,firebaseAuth:firebase.auth()});};var SignInScreen=function SignInScreen(){return React.createElement(Grid,{centered:true,style:{marginTop:\"30px\"}},React.createElement(Segment,{color:\"blue\",style:{width:\"80%\"}},React.createElement(Grid.Row,null,React.createElement(Header,{content:\"Log in to access saved workouts and more!\"})),React.createElement(Grid.Row,null,React.createElement(SignIn,null))));};var ProfileScreen=function ProfileScreen(_ref){var user=_ref.user;var workoutContext=useContext(WorkoutContext);var favworkouts=workoutContext.favworkouts;return React.createElement(Grid,{centered:true,style:{marginTop:\"30px\"}},React.createElement(Grid.Row,null,React.createElement(Header,{inverted:true},React.createElement(Icon,{name:\"user\"}),user.displayName)),React.createElement(Grid.Row,null,React.createElement(Button,{primary:true,content:\"Logout\",onClick:function onClick(){return firebase.auth().signOut();}})),React.createElement(Divider,{inverted:true}),React.createElement(Grid.Row,null,React.createElement(Header,{inverted:true,dividing:true,content:\"FAVORITE WORKOUTS\"}),favworkouts.length===0?React.createElement(NoFavesMessage,null):React.createElement(SavedList,{user:user})));};var ProfilePage=function ProfilePage(_ref2){var user=_ref2.user;return user?React.createElement(ProfileScreen,{user:user}):React.createElement(SignInScreen,null);};var NoFavesMessage=function NoFavesMessage(){return React.createElement(Card,{style:{textAlign:\"left\",width:\"80%\",marginTop:\"0\"}},React.createElement(Card.Content,null,React.createElement(Card.Header,{content:\"Your favorites list is empty!\"}),React.createElement(Card.Description,null,\"Save workouts to this list by tapping on the heart icon next to the workout name!\")));};export default ProfilePage;","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/workout-generator/src/Pages/ProfilePage.js"],"names":["React","useContext","Grid","Card","Header","Icon","Button","Segment","Divider","SavedList","WorkoutContext","StyledFirebaseAuth","firebase","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","SignIn","SignInScreen","marginTop","width","ProfileScreen","user","workoutContext","favworkouts","displayName","signOut","length","ProfilePage","NoFavesMessage","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Grid, Card, Header, Icon, Button, Segment, Divider } from 'semantic-ui-react';\nimport SavedList from '../Components/SavedList';\nimport { WorkoutContext } from '../context';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { firebase } from '../firebaseDb';\nimport 'firebase/database';\nimport \"firebase/auth\";\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nconst SignIn = () => (\n  <StyledFirebaseAuth\n    uiConfig={uiConfig}\n    firebaseAuth={firebase.auth()}\n  />\n);\n\nconst SignInScreen = () => (\n  <Grid centered style={{ marginTop: \"30px\" }}>\n    <Segment color=\"blue\" style={{ width: \"80%\" }}>\n      <Grid.Row>\n        <Header content=\"Log in to access saved workouts and more!\" />\n      </Grid.Row>\n      <Grid.Row>\n        <SignIn />\n      </Grid.Row>\n    </Segment>\n  </Grid>\n)\n\nconst ProfileScreen = ({user}) => {\n  const workoutContext = useContext(WorkoutContext)\n  const { favworkouts } = workoutContext;\n  return (\n    <Grid centered style={{ marginTop: \"30px\" }}>\n      <Grid.Row>\n        <Header inverted>\n          <Icon name='user' />\n          {user.displayName}\n        </Header>\n      </Grid.Row>\n      <Grid.Row>\n        <Button \n          primary \n          content=\"Logout\" \n          onClick={() => firebase.auth().signOut()} \n        />\n      </Grid.Row>\n      <Divider inverted />\n      <Grid.Row>\n        <Header inverted dividing content=\"FAVORITE WORKOUTS\" />\n        { favworkouts.length === 0 ? <NoFavesMessage />\n        : <SavedList user={user} /> }\n      </Grid.Row>\n    </Grid>\n  )\n}\n\n\nconst ProfilePage = ({ user }) => {\n  return (\n    user ? <ProfileScreen user={user} /> : <SignInScreen />\n  );\n};\n\nconst NoFavesMessage = () =>\n  <Card style={{ textAlign: \"left\", width: \"80%\", marginTop:\"0\" }}>\n    <Card.Content>\n      <Card.Header content=\"Your favorites list is empty!\" />\n      <Card.Description>\n        Save workouts to this list by tapping on the heart icon next to the workout name!\n      </Card.Description>\n    </Card.Content>\n  </Card>\n\nexport default ProfilePage"]},"metadata":{},"sourceType":"module"}