{"ast":null,"code":"import _toConsumableArray from\"/Users/utkarshmishra/TeamOrange/workout-generator/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/utkarshmishra/TeamOrange/workout-generator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useState}from'react';import*as data from'./wkouts.json';import{shuffleList}from'./utilities';var Exercises=data.Exercises;// const grabExercises = async () => {\n//   const dataPayload = await firebaseDb.once('value');\n//   console.log(dataPayload.val());\n//   return dataPayload.exists() ? dataPayload.val() : {};\n// };\n//grabExercises();\nvar exercises=Object.values(Exercises);var WorkoutContext=createContext(null);var Provider=WorkoutContext.Provider;var initialWorkouts=shuffleList(exercises.filter(function(val){return val.Equipment===\"None\";})).slice(0,8);var StateProvider=function StateProvider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),possible=_useState2[0],setPossible=_useState2[1];var _useState3=useState([\"None\"]),_useState4=_slicedToArray(_useState3,2),equipment=_useState4[0],setEquipment=_useState4[1];var _useState5=useState([\"None\"]),_useState6=_slicedToArray(_useState5,2),muscleGroups=_useState6[0],setMuscleGroups=_useState6[1];var _useState7=useState(initialWorkouts),_useState8=_slicedToArray(_useState7,2),workouts=_useState8[0],setWorkouts=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),replace=_useState10[0],setReplace=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),favworkouts=_useState12[0],setFavworkouts=_useState12[1];var _useState13=useState(8),_useState14=_slicedToArray(_useState13,2),exercisesAmount=_useState14[0],setExercisesAmount=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),countdown=_useState16[0],setCountdown=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),currentWorkoutID=_useState18[0],setCurrentWorkoutID=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),displayList=_useState20[0],setDisplayList=_useState20[1];var update=function update(){if(equipment.length>0&&muscleGroups.length>1){setPossible(true);}else{setPossible(false);}return possible;};var addEquip=function addEquip(value){equipment.includes(value)?setEquipment(equipment.filter(function(x){return x!==value;})):setEquipment([].concat(_toConsumableArray(equipment),[value]));};var addMuscleGroup=function addMuscleGroup(value){muscleGroups.includes(value)?setMuscleGroups(muscleGroups.filter(function(x){return x!==value;})):setMuscleGroups([].concat(_toConsumableArray(muscleGroups),[value]));};var toggleFavs=function toggleFavs(value){favworkouts.map(function(val){return val.Title;}).includes(value.Title)?setFavworkouts(favworkouts.filter(function(x){return x.Title!==value.Title;})):setFavworkouts([].concat(_toConsumableArray(favworkouts),[value]));};var generateWorkouts=function generateWorkouts(){var values=exercises.filter(function(val){// console.log(\"generateWorkouts called\")\n// console.log(val)\nreturn equipment.includes(val.Equipment)&&muscleGroups.includes(val[\"Primary Muscle Group\"]);});// values = values.filter(val => {\n//   return muscleGroups.includes(val[\"Primary Muscle Group\"])\n// })\nsetCurrentWorkoutID(0);var substr=shuffleList(values);console.log(substr);setWorkouts(substr.slice(0,exercisesAmount));console.log(substr.slice(0,exercisesAmount));setReplace(substr.slice(exercisesAmount,substr.length));console.log(substr.slice(exercisesAmount,substr.length));};var generateDisplayList=function generateDisplayList(){var display=[];var restItem=exercises.filter(function(val){return val.Title===\"Rest\";})[0];console.log(restItem);var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=workouts[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var workout=_step.value;display.push(workout);display.push(restItem);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}setDisplayList(display);};var replaceWorkout=function replaceWorkout(clickElement){if(replace.length>0){var val=replace;var element=val.pop();var val1=workouts;var index=val1.indexOf(clickElement);val1[index]=element;setReplace(val);setWorkouts(val1);}};var api={equipment:equipment,update:update,addEquip:addEquip,muscleGroups:muscleGroups,addMuscleGroup:addMuscleGroup,workouts:workouts,generateWorkouts:generateWorkouts,exercisesAmount:exercisesAmount,setExercisesAmount:setExercisesAmount,countdown:countdown,setCountdown:setCountdown,favworkouts:favworkouts,toggleFavs:toggleFavs,replaceWorkout:replaceWorkout,currentWorkoutID:currentWorkoutID,setCurrentWorkoutID:setCurrentWorkoutID,displayList:displayList,generateDisplayList:generateDisplayList};return React.createElement(Provider,{value:api},children);};export{WorkoutContext,StateProvider};","map":{"version":3,"sources":["/Users/utkarshmishra/TeamOrange/workout-generator/src/context.js"],"names":["React","createContext","useState","data","shuffleList","Exercises","exercises","Object","values","WorkoutContext","Provider","initialWorkouts","filter","val","Equipment","slice","StateProvider","children","possible","setPossible","equipment","setEquipment","muscleGroups","setMuscleGroups","workouts","setWorkouts","replace","setReplace","favworkouts","setFavworkouts","exercisesAmount","setExercisesAmount","countdown","setCountdown","currentWorkoutID","setCurrentWorkoutID","displayList","setDisplayList","update","length","addEquip","value","includes","x","addMuscleGroup","toggleFavs","map","Title","generateWorkouts","substr","console","log","generateDisplayList","display","restItem","workout","push","replaceWorkout","clickElement","element","pop","val1","index","indexOf","api"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from 'react';\nimport * as data from './wkouts.json';\nimport { shuffleList } from './utilities';\n\nconst { Exercises } = data;\n\n// const grabExercises = async () => {\n//   const dataPayload = await firebaseDb.once('value');\n\n//   console.log(dataPayload.val());\n\n//   return dataPayload.exists() ? dataPayload.val() : {};\n// };\n//grabExercises();\n\nconst exercises = Object.values(Exercises);\nconst WorkoutContext = createContext(null);\nconst { Provider } = WorkoutContext;\n\nconst initialWorkouts = shuffleList(exercises.filter(val => {\n  return val.Equipment === \"None\"\n})).slice(0, 8)\n\nconst StateProvider = ({ children }) => {\n  const [possible, setPossible] = useState(false);\n  const [equipment, setEquipment] = useState([\"None\"]);\n  const [muscleGroups, setMuscleGroups] = useState([\"None\"]);\n  const [workouts, setWorkouts] = useState(initialWorkouts);\n  const [replace, setReplace] = useState([]);\n  const [favworkouts, setFavworkouts] = useState([]);\n  const [exercisesAmount, setExercisesAmount] = useState(8);\n  const [countdown, setCountdown] = useState(0);\n  const [currentWorkoutID, setCurrentWorkoutID] = useState(0);\n  const [displayList, setDisplayList] = useState([]);\n\n  \n  const update = () => {\n    \n    if (equipment.length > 0 && muscleGroups.length > 1) {\n      setPossible(true);\n    }\n    else {\n      setPossible(false);\n    }\n    return possible;\n  }\n\n  const addEquip = value => {\n    equipment.includes(value) ? setEquipment(equipment.filter(x => x !== value)) : setEquipment([...equipment, value]);\n  }\n\n  const addMuscleGroup = value => {\n    muscleGroups.includes(value)? setMuscleGroups(muscleGroups.filter(x => x !== value)):setMuscleGroups([...muscleGroups, value]);\n  }\n\n  const toggleFavs = value => {\n    favworkouts.map(val => val.Title).includes(value.Title) ?\n      setFavworkouts(favworkouts.filter(x => x.Title !== value.Title)) :\n      setFavworkouts([...favworkouts, value])\n  }\n\n  const generateWorkouts = () => {\n    const values = exercises.filter(val => {\n      // console.log(\"generateWorkouts called\")\n      // console.log(val)\n      return equipment.includes(val.Equipment) && muscleGroups.includes(val[\"Primary Muscle Group\"]);\n    })\n\n    // values = values.filter(val => {\n    //   return muscleGroups.includes(val[\"Primary Muscle Group\"])\n    // })\n\n    setCurrentWorkoutID(0);\n    let substr = shuffleList(values);\n    console.log(substr);\n    setWorkouts(substr.slice(0, exercisesAmount));\n    console.log(substr.slice(0, exercisesAmount))\n    setReplace(substr.slice(exercisesAmount, substr.length));\n    console.log(substr.slice(exercisesAmount, substr.length))\n  }\n\n  const generateDisplayList = () => {\n    let display = []\n    const restItem = exercises.filter(val => val.Title === \"Rest\")[0]\n    console.log(restItem);\n    \n    for (const workout of workouts) {\n      display.push(workout)\n      display.push(restItem)\n    }\n    setDisplayList(display)\n  }\n\n  const replaceWorkout = clickElement => {\n    if (replace.length > 0){\n      let val = replace;\n    let element = val.pop();\n    let val1 = workouts;\n    let index = val1.indexOf(clickElement);\n    val1[index] = element;\n    setReplace(val);\n    setWorkouts(val1);\n    }\n  }\n\n  const api = {\n    equipment,\n    update,\n    \n    addEquip,\n    muscleGroups,\n    addMuscleGroup,\n    workouts,\n    generateWorkouts,\n    exercisesAmount,\n    setExercisesAmount,\n    countdown,\n    setCountdown,\n    favworkouts,\n    toggleFavs,\n    replaceWorkout,\n    currentWorkoutID,\n    setCurrentWorkoutID,\n    displayList,\n    generateDisplayList\n  };\n\n  return <Provider value={api}>{children}</Provider>;\n}\n\nexport { WorkoutContext, StateProvider };"]},"metadata":{},"sourceType":"module"}